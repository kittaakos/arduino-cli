{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Arduino CLI is an all-in-one solution that provides builder, boards/library manager, uploader, discovery and many other tools needed to use any Arduino compatible board and platforms. Installation \u00b6 You have several options to install the latest version of the Arduino CLI on your system, see the installation page. Getting started \u00b6 Follow the Getting started guide to see how to use the most common CLI commands available. Using the gRPC interface \u00b6 The client_example folder contains a sample program that shows how to use gRPC interface of the CLI. Available services and messages are detailed in the gRPC reference pages.","title":"Documentation Home"},{"location":"#installation","text":"You have several options to install the latest version of the Arduino CLI on your system, see the installation page.","title":"Installation"},{"location":"#getting-started","text":"Follow the Getting started guide to see how to use the most common CLI commands available.","title":"Getting started"},{"location":"#using-the-grpc-interface","text":"The client_example folder contains a sample program that shows how to use gRPC interface of the CLI. Available services and messages are detailed in the gRPC reference pages.","title":"Using the gRPC interface"},{"location":"CONTRIBUTING/","text":"How to contribute \u00b6 First of all, thanks for contributing! This document provides some basic guidelines for contributing to this repository. To propose improvements or fix a bug, feel free to submit a PR. Legal requirements \u00b6 Before we can accept your contributions you have to sign the Contributor License Agreement Prerequisites \u00b6 To build the Arduino CLI from sources you need the following tools to be available in your local enviroment: Go version 1.12 or later Taskfile to help you run the most common tasks from the command line If you want to run integration tests you will also need: A serial port with an Arduino device attached A working Python environment, version 3.5 or later If you're working on the gRPC interface you will also have to: download the protoc compiler run go get -U github.com/golang/protobuf/protoc-gen-go Building the source code \u00b6 From the project folder root, just run: task build The project uses Go modules so dependencies will be downloaded automatically; at the end of the build, you should find an arduino-cli executable in the same folder. Running the tests \u00b6 There are several checks and test suites in place to ensure the code works as expected but it's also written in a way that's consistent across the whole codebase. To avoid pushing changes that will cause the CI system to fail, you can run most of the tests locally. To ensure code style is consistent, run: task check To run unit tests: task test-unit To run integration tests (these will take some time and require special setup, see following paragraph): task test-integration Running only some tests \u00b6 By default, all tests from all go packages are run. To run only unit tests from one or more specific packages, you can set the TARGETS environment variable, e.g.: TARGETS=./arduino/cores/packagemanager task test-unit Alternatively, to run only some specific test(s), you can specify a regex to match against the test function name: TEST_REGEX='^TestTryBuild.*' task test-unit Both can be combined as well, typically to run only a specific test: TEST_REGEX='^TestFindBoardWithFQBN$' TARGETS=./arduino/cores/packagemanager task test-unit Integration tests \u00b6 Being a command line interface, Arduino CLI is heavily interactive and it has to stay consistent in accepting the user input and providing the expected output and proper exit codes. On top of this, many Arduino CLI features involve communicating with external devices, most likely through a serial port, so unit tests can only put our confidence that the code is working so far. For these reasons, in addition to regular unit tests the project has a suite of integration tests that actually run Arduino CLI in a different process and assess the options are correctly understood and the output is what we expect. To run the full suite of integration tests you need an Arduino device attached to a serial port and a working Python environment. Chances are that you already have Python installed in your system, if this is not the case you can download the official distribution or use the package manager provided by your Operating System. Some dependencies need to be installed before running the tests and to avoid polluting your global Python enviroment with dependencies that might be only used by the Arduino CLI, you can use a virtual environment . There are many ways to manage virtual environments, for example you can use a productivity tool called hatch . First you need to install it (you might need to sudo the following command): pip3 install --user hatch Then you can create a virtual environment to be used while working on Arduino CLI: hatch env arduino-cli At this point the virtual environment was created and you need to make it active every time you open a new terminal session with the following command: hatch shell arduino-cli From now on, every package installed by Python will be confined to the arduino-cli virtual environment, so you can proceed installing the dependencies required with: pip install -r test/requirements.txt If the last step was successful, you should be able to run the tests with: task test-integration Working on docs \u00b6 Documentation consists of several Markdown files stored under the docs folder at the root of the repo. Some of those files are automatically generated in the CI pipeline that builds the documentation website so you won't find them in the git repository and you need to generate them locally. If you're working on docs and your changes are not trivial, you might want to preview the documentation website locally, before opening a Pull Request. To run the docs toolchain locally you need to have: Go version 1.12 or later Taskfile to help you run the most common tasks from the command line A working Python environment, version 3.5 or later Before running the toolchain, perform the following operations: go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc When working on docs, you can launch a command that will take care of generating the docs, build the static website and start a local server you can access with your browser to see a preview of your changes - to launch this command do: task docs:serve If you dont' see any error, hit http://127.0.0.1:8000 with your browser. Pull Requests \u00b6 In order to ease code reviews and have your contributions merged faster, here is a list of items you can check before submitting a PR: Create small PRs that are narrowly focused on addressing a single concern. PR titles indirectly become part of the CHANGELOG so it's crucial to provide a good record of what change is being made in the title; why it was made will go in the PR description, along with a link to a GitHub issue if it exists. Write tests for the code you wrote. Open your PR against the master branch. Maintain clean commit history and use meaningful commit messages . PRs with messy commit history are difficult to review and require a lot of work to be merged. Your PR must pass all CI tests before we will merge it. If you're seeing an error and don't think it's your fault, it may not be! The reviewer will help you if there are test failures that seem not related to the change you are making. Additional settings \u00b6 If you need to push a commit that's only shipping documentation changes or example files, thus a complete no-op for the test suite, please start the commit message with the string [skip ci] to skip the build and give that slot to someone else who does need it. If your PR doesn't need to be included in the changelog, please start the PR title with the string [skip changelog]","title":"How to contribute"},{"location":"CONTRIBUTING/#how-to-contribute","text":"First of all, thanks for contributing! This document provides some basic guidelines for contributing to this repository. To propose improvements or fix a bug, feel free to submit a PR.","title":"How to contribute"},{"location":"CONTRIBUTING/#legal-requirements","text":"Before we can accept your contributions you have to sign the Contributor License Agreement","title":"Legal requirements"},{"location":"CONTRIBUTING/#prerequisites","text":"To build the Arduino CLI from sources you need the following tools to be available in your local enviroment: Go version 1.12 or later Taskfile to help you run the most common tasks from the command line If you want to run integration tests you will also need: A serial port with an Arduino device attached A working Python environment, version 3.5 or later If you're working on the gRPC interface you will also have to: download the protoc compiler run go get -U github.com/golang/protobuf/protoc-gen-go","title":"Prerequisites"},{"location":"CONTRIBUTING/#building-the-source-code","text":"From the project folder root, just run: task build The project uses Go modules so dependencies will be downloaded automatically; at the end of the build, you should find an arduino-cli executable in the same folder.","title":"Building the source code"},{"location":"CONTRIBUTING/#running-the-tests","text":"There are several checks and test suites in place to ensure the code works as expected but it's also written in a way that's consistent across the whole codebase. To avoid pushing changes that will cause the CI system to fail, you can run most of the tests locally. To ensure code style is consistent, run: task check To run unit tests: task test-unit To run integration tests (these will take some time and require special setup, see following paragraph): task test-integration","title":"Running the tests"},{"location":"CONTRIBUTING/#running-only-some-tests","text":"By default, all tests from all go packages are run. To run only unit tests from one or more specific packages, you can set the TARGETS environment variable, e.g.: TARGETS=./arduino/cores/packagemanager task test-unit Alternatively, to run only some specific test(s), you can specify a regex to match against the test function name: TEST_REGEX='^TestTryBuild.*' task test-unit Both can be combined as well, typically to run only a specific test: TEST_REGEX='^TestFindBoardWithFQBN$' TARGETS=./arduino/cores/packagemanager task test-unit","title":"Running only some tests"},{"location":"CONTRIBUTING/#integration-tests","text":"Being a command line interface, Arduino CLI is heavily interactive and it has to stay consistent in accepting the user input and providing the expected output and proper exit codes. On top of this, many Arduino CLI features involve communicating with external devices, most likely through a serial port, so unit tests can only put our confidence that the code is working so far. For these reasons, in addition to regular unit tests the project has a suite of integration tests that actually run Arduino CLI in a different process and assess the options are correctly understood and the output is what we expect. To run the full suite of integration tests you need an Arduino device attached to a serial port and a working Python environment. Chances are that you already have Python installed in your system, if this is not the case you can download the official distribution or use the package manager provided by your Operating System. Some dependencies need to be installed before running the tests and to avoid polluting your global Python enviroment with dependencies that might be only used by the Arduino CLI, you can use a virtual environment . There are many ways to manage virtual environments, for example you can use a productivity tool called hatch . First you need to install it (you might need to sudo the following command): pip3 install --user hatch Then you can create a virtual environment to be used while working on Arduino CLI: hatch env arduino-cli At this point the virtual environment was created and you need to make it active every time you open a new terminal session with the following command: hatch shell arduino-cli From now on, every package installed by Python will be confined to the arduino-cli virtual environment, so you can proceed installing the dependencies required with: pip install -r test/requirements.txt If the last step was successful, you should be able to run the tests with: task test-integration","title":"Integration tests"},{"location":"CONTRIBUTING/#working-on-docs","text":"Documentation consists of several Markdown files stored under the docs folder at the root of the repo. Some of those files are automatically generated in the CI pipeline that builds the documentation website so you won't find them in the git repository and you need to generate them locally. If you're working on docs and your changes are not trivial, you might want to preview the documentation website locally, before opening a Pull Request. To run the docs toolchain locally you need to have: Go version 1.12 or later Taskfile to help you run the most common tasks from the command line A working Python environment, version 3.5 or later Before running the toolchain, perform the following operations: go get -u github.com/pseudomuto/protoc-gen-doc/cmd/protoc-gen-doc When working on docs, you can launch a command that will take care of generating the docs, build the static website and start a local server you can access with your browser to see a preview of your changes - to launch this command do: task docs:serve If you dont' see any error, hit http://127.0.0.1:8000 with your browser.","title":"Working on docs"},{"location":"CONTRIBUTING/#pull-requests","text":"In order to ease code reviews and have your contributions merged faster, here is a list of items you can check before submitting a PR: Create small PRs that are narrowly focused on addressing a single concern. PR titles indirectly become part of the CHANGELOG so it's crucial to provide a good record of what change is being made in the title; why it was made will go in the PR description, along with a link to a GitHub issue if it exists. Write tests for the code you wrote. Open your PR against the master branch. Maintain clean commit history and use meaningful commit messages . PRs with messy commit history are difficult to review and require a lot of work to be merged. Your PR must pass all CI tests before we will merge it. If you're seeing an error and don't think it's your fault, it may not be! The reviewer will help you if there are test failures that seem not related to the change you are making.","title":"Pull Requests"},{"location":"CONTRIBUTING/#additional-settings","text":"If you need to push a commit that's only shipping documentation changes or example files, thus a complete no-op for the test suite, please start the commit message with the string [skip ci] to skip the build and give that slot to someone else who does need it. If your PR doesn't need to be included in the changelog, please start the PR title with the string [skip changelog]","title":"Additional settings"},{"location":"FAQ/","text":"Arduino Uno/Mega/Duemilanove is not detected \u00b6 When you run arduino-cli board list , your board doesn't show up. Possible causes: Your board is a cheaper clone, or It mounts a USB2Serial converter like FT232 or CH320: these chips always reports the same USB VID/PID to the operating system, so the only thing that we know is that the board mounts that specific USB2Serial chip, but we don\u2019t know which board is. What's the FQBN string? \u00b6 For a deeper understanding of how FQBN works, you should understand Arduino Hardware specification. You can find more information in this arduino/Arduino wiki page .","title":"FAQ"},{"location":"FAQ/#arduino-unomegaduemilanove-is-not-detected","text":"When you run arduino-cli board list , your board doesn't show up. Possible causes: Your board is a cheaper clone, or It mounts a USB2Serial converter like FT232 or CH320: these chips always reports the same USB VID/PID to the operating system, so the only thing that we know is that the board mounts that specific USB2Serial chip, but we don\u2019t know which board is.","title":"Arduino Uno/Mega/Duemilanove is not detected"},{"location":"FAQ/#whats-the-fqbn-string","text":"For a deeper understanding of how FQBN works, you should understand Arduino Hardware specification. You can find more information in this arduino/Arduino wiki page .","title":"What's the FQBN string?"},{"location":"getting-started/","text":"Despite there's no feature parity at the moment, Arduino CLI provides many of the features you can find in the Arduino IDE, let's see some examples. Before you start \u00b6 arduino-cli is a container of commands and each command has its own dedicated help text that can be shown with the help command like this: $ arduino-cli help core Arduino Core operations. Usage: arduino-cli core [command] Examples: ./arduino-cli core update-index Available Commands: download Downloads one or more cores and corresponding tool dependencies. install Installs one or more cores and corresponding tool dependencies. list Shows the list of installed platforms. search Search for a core in the package index. uninstall Uninstalls one or more cores and corresponding tool dependencies if no more used. update-index Updates the index of cores. upgrade Upgrades one or all installed platforms to the latest version. Flags: -h, --help help for core Global Flags: --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. -v, --verbose Print the logs on the standard output. Use \"arduino-cli core [command] --help\" for more information about a command. Create a configuration file \u00b6 Arduino CLI doesn't strictly require a configuration file to work because the command line interface provides any possible functionality. However, having one can spare you a lot of typing when issuing a command, so let's create it right ahead with: $ arduino-cli config init Config file written: /home/luca/.arduino15/arduino-cli.yaml If you inspect arduino-cli.yaml contents, you'll find out the available options with their respective default values. Create a new sketch \u00b6 To create a new sketch named MyFirstSketch in the current directory, run the following command: $ arduino-cli sketch new MyFirstSketch Sketch created in: /home/luca/MyFirstSketch A sketch is a folder containing assets like source files and libraries; the new command creates for you a .ino file called MyFirstSketch.ino containing Arduino boilerplate code: $ cat $HOME /MyFirstSketch/MyFirstSketch.ino void setup () { } void loop () { } At this point you can use your favourite file editor or IDE to open the file $HOME/MyFirstSketch/MyFirstSketch.ino and change the code like this: void setup () { pinMode ( LED_BUILTIN , OUTPUT ); } void loop () { digitalWrite ( LED_BUILTIN , HIGH ); delay ( 1000 ); digitalWrite ( LED_BUILTIN , LOW ); delay ( 1000 ); } Connect the board to your PC \u00b6 The first thing to do upon a fresh install is to update the local cache of available platforms and libraries by running: $ arduino-cli core update-index Updating index: package_index.json downloaded After connecting the board to your PCs by using the USB cable, you should be able to check whether it's been recognized by running: $ arduino-cli board list Port Type Board Name FQBN Core /dev/ttyACM1 Serial Port ( USB ) Arduino/Genuino MKR1000 arduino:samd:mkr1000 arduino:samd In this example, the MKR1000 board was recognized and from the output of the command you see the platform core called arduino:samd is the one that needs to be installed to make it work. If you see an Unknown board listed, uploading should still work as long as you identify the platform core and use the correct FQBN string. When a board is not detected for whatever reason, you can list all the supported boards and their FQBN strings by running the following: $ arduino-cli board listall mkr Board Name FQBN Arduino MKR FOX 1200 arduino:samd:mkrfox1200 Arduino MKR GSM 1400 arduino:samd:mkrgsm1400 Arduino MKR WAN 1300 arduino:samd:mkrwan1300 Arduino MKR WiFi 1010 arduino:samd:mkrwifi1010 Arduino MKRZERO arduino:samd:mkrzero Arduino/Genuino MKR1000 arduino:samd:mkr1000 Install the core for your board \u00b6 To install the arduino:samd platform core, run the following: $ arduino-cli core install arduino:samd Downloading tools... arduino:arm-none-eabi-gcc@4.8.3-2014q1 downloaded arduino:bossac@1.7.0 downloaded arduino:openocd@0.9.0-arduino6-static downloaded arduino:CMSIS@4.5.0 downloaded arduino:CMSIS-Atmel@1.1.0 downloaded arduino:arduinoOTA@1.2.0 downloaded Downloading cores... arduino:samd@1.6.19 downloaded Installing tools... Installing platforms... Results: arduino:samd@1.6.19 - Installed arduino:arm-none-eabi-gcc@4.8.3-2014q1 - Installed arduino:bossac@1.7.0 - Installed arduino:openocd@0.9.0-arduino6-static - Installed arduino:CMSIS@4.5.0 - Installed arduino:CMSIS-Atmel@1.1.0 - Installed arduino:arduinoOTA@1.2.0 - Installed Now verify we have installed the core properly by running: $ arduino-cli core list ID Installed Latest Name arduino:samd 1 .6.19 1 .6.19 Arduino SAMD Boards ( 32 -bits ARM Cortex-M0+ ) Great! Now we are ready to compile and upload the sketch. Adding 3 rd party cores \u00b6 If your board requires 3 rd party core packages to work, you can list the URLs to additional package indexes in the Arduino CLI configuration file. For example, to add the ESP8266 core, edit the configuration file and change the board_manager settings as follows: board_manager : additional_urls : - https://arduino.esp8266.com/stable/package_esp8266com_index.json From now on, commands supporting custom cores will automatically use the additional URL from the configuration file: $ arduino-cli core update-index Updating index: package_index.json downloaded Updating index: package_esp8266com_index.json downloaded Updating index: package_index.json downloaded $ arduino-cli core search esp8266 ID Version Name esp8266:esp8266 2 .5.2 esp8266 Alternatively, you can pass a link to the the additional package index file with the --additional-urls option, that has to be specified every time and for every command that operates on a 3 rd party platform core, for example: $ arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json Updating index: package_esp8266com_index.json downloaded $ arduino-cli core search esp8266 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json ID Version Name esp8266:esp8266 2 .5.2 esp8266 Compile and upload the sketch \u00b6 To compile the sketch you run the compile command passing the proper FQBN string: $ arduino-cli compile --fqbn arduino:samd:mkr1000 MyFirstSketch Sketch uses 9600 bytes ( 3 % ) of program storage space. Maximum is 262144 bytes. To upload the sketch to your board, run the following command, this time also providing the serial port where the board is connected: $ arduino-cli upload -p /dev/ttyACM0 --fqbn arduino:samd:mkr1000 MyFirstSketch No new serial port detected. Atmel SMART device 0x10010005 found Device : ATSAMD21G18A Chip ID : 10010005 Version : v2.0 [ Arduino:XYZ ] Dec 20 2016 15 :36:43 Address : 8192 Pages : 3968 Page Size : 64 bytes Total Size : 248KB Planes : 1 Lock Regions : 16 Locked : none Security : false Boot Flash : true BOD : true BOR : true Arduino : FAST_CHIP_ERASE Arduino : FAST_MULTI_PAGE_WRITE Arduino : CAN_CHECKSUM_MEMORY_BUFFER Erase flash done in 0 .784 seconds Write 9856 bytes to flash ( 154 pages ) [==============================] 100 % ( 154 /154 pages ) done in 0 .069 seconds Verify 9856 bytes of flash with checksum. Verify successful done in 0 .009 seconds CPU reset. Add libraries \u00b6 If you need to add more functionalities to your sketch, chances are some of the libraries available in the Arduino ecosystem already provide what you need. For example, if you need a debouncing strategy to better handle button inputs, you can try searching for the debouncer keyword: $ arduino-cli lib search debouncer Name: \"Debouncer\" Author: hideakitai Maintainer: hideakitai Sentence: Debounce library for Arduino Paragraph: Debounce library for Arduino Website: https://github.com/hideakitai Category: Timing Architecture: * Types: Contributed Versions: [ 0 .1.0 ] Name: \"FTDebouncer\" Author: Ubi de Feo Maintainer: Ubi de Feo, Sebastian Hunkeler Sentence: An efficient, low footprint, fast pin debouncing library for Arduino Paragraph: This pin state supervisor manages debouncing of buttons and handles transitions between LOW and HIGH state, calling a function and notifying your code of which pin has been activated or deactivated. Website: https://github.com/ubidefeo/FTDebouncer Category: Uncategorized Architecture: * Types: Contributed Versions: [ 1 .3.0 ] Name: \"SoftTimer\" Author: Balazs Kelemen <prampec+arduino@gmail.com> Maintainer: Balazs Kelemen <prampec+arduino@gmail.com> Sentence: SoftTimer is a lightweight pseudo multitasking solution for Arduino. Paragraph: SoftTimer enables higher level Arduino programing, yet easy to use, and lightweight. You are often faced with the problem that you need to do multiple tasks at the same time. In SoftTimer, the programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer. Website: https://github.com/prampec/arduino-softtimer Category: Timing Architecture: * Types: Contributed Versions: [ 3 .0.0, 3 .1.0, 3 .1.1, 3 .1.2, 3 .1.3, 3 .1.5, 3 .2.0 ] Our favourite is FTDebouncer , let's install it by running: $ arduino-cli lib install FTDebouncer FTDebouncer depends on FTDebouncer@1.3.0 Downloading FTDebouncer@1.3.0... FTDebouncer@1.3.0 downloaded Installing FTDebouncer@1.3.0... Installed FTDebouncer@1.3.0 Using the daemon mode and the gRPC interface \u00b6 Arduino CLI can be launched as a gRPC server via the daemon command. The client_example folder contains a sample client code that shows how to interact with the gRPC server. Available services and messages are detailed in the gRPC reference pages. To provide observability for the gRPC server activities besides logs, the daemon mode activates and exposes by default a Prometheus endpoint ( http://localhost:9090/metrics ) that can be fetched for telemetry data like: # TYPE daemon_compile counter daemon_compile{buildProperties=\"\",exportFile=\"\",fqbn=\"arduino:samd:mkr1000\",installationID=\"ed6f1f22-1fbe-4b1f-84be-84d035b6369c\",jobs=\"0\",libraries=\"\",preprocess=\"false\",quiet=\"false\",showProperties=\"false\",sketchPath=\"5ff767c6fa5a91230f5cb4e267c889aa61489ab2c4f70f35f921f934c1462cb6\",success=\"true\",verbose=\"true\",vidPid=\"\",warnings=\"\"} 1 1580385724726 # TYPE daemon_board_list counter daemon_board_list{installationID=\"ed6f1f22-1fbe-4b1f-84be-84d035b6369c\",success=\"true\"} 1 1580385724833 The telemetry settings are exposed via the telemetry section in the CLI configuration: telemetry : enabled : true addr : :9090","title":"Getting started"},{"location":"getting-started/#before-you-start","text":"arduino-cli is a container of commands and each command has its own dedicated help text that can be shown with the help command like this: $ arduino-cli help core Arduino Core operations. Usage: arduino-cli core [command] Examples: ./arduino-cli core update-index Available Commands: download Downloads one or more cores and corresponding tool dependencies. install Installs one or more cores and corresponding tool dependencies. list Shows the list of installed platforms. search Search for a core in the package index. uninstall Uninstalls one or more cores and corresponding tool dependencies if no more used. update-index Updates the index of cores. upgrade Upgrades one or all installed platforms to the latest version. Flags: -h, --help help for core Global Flags: --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. -v, --verbose Print the logs on the standard output. Use \"arduino-cli core [command] --help\" for more information about a command.","title":"Before you start"},{"location":"getting-started/#create-a-configuration-file","text":"Arduino CLI doesn't strictly require a configuration file to work because the command line interface provides any possible functionality. However, having one can spare you a lot of typing when issuing a command, so let's create it right ahead with: $ arduino-cli config init Config file written: /home/luca/.arduino15/arduino-cli.yaml If you inspect arduino-cli.yaml contents, you'll find out the available options with their respective default values.","title":"Create a configuration file"},{"location":"getting-started/#create-a-new-sketch","text":"To create a new sketch named MyFirstSketch in the current directory, run the following command: $ arduino-cli sketch new MyFirstSketch Sketch created in: /home/luca/MyFirstSketch A sketch is a folder containing assets like source files and libraries; the new command creates for you a .ino file called MyFirstSketch.ino containing Arduino boilerplate code: $ cat $HOME /MyFirstSketch/MyFirstSketch.ino void setup () { } void loop () { } At this point you can use your favourite file editor or IDE to open the file $HOME/MyFirstSketch/MyFirstSketch.ino and change the code like this: void setup () { pinMode ( LED_BUILTIN , OUTPUT ); } void loop () { digitalWrite ( LED_BUILTIN , HIGH ); delay ( 1000 ); digitalWrite ( LED_BUILTIN , LOW ); delay ( 1000 ); }","title":"Create a new sketch"},{"location":"getting-started/#connect-the-board-to-your-pc","text":"The first thing to do upon a fresh install is to update the local cache of available platforms and libraries by running: $ arduino-cli core update-index Updating index: package_index.json downloaded After connecting the board to your PCs by using the USB cable, you should be able to check whether it's been recognized by running: $ arduino-cli board list Port Type Board Name FQBN Core /dev/ttyACM1 Serial Port ( USB ) Arduino/Genuino MKR1000 arduino:samd:mkr1000 arduino:samd In this example, the MKR1000 board was recognized and from the output of the command you see the platform core called arduino:samd is the one that needs to be installed to make it work. If you see an Unknown board listed, uploading should still work as long as you identify the platform core and use the correct FQBN string. When a board is not detected for whatever reason, you can list all the supported boards and their FQBN strings by running the following: $ arduino-cli board listall mkr Board Name FQBN Arduino MKR FOX 1200 arduino:samd:mkrfox1200 Arduino MKR GSM 1400 arduino:samd:mkrgsm1400 Arduino MKR WAN 1300 arduino:samd:mkrwan1300 Arduino MKR WiFi 1010 arduino:samd:mkrwifi1010 Arduino MKRZERO arduino:samd:mkrzero Arduino/Genuino MKR1000 arduino:samd:mkr1000","title":"Connect the board to your PC"},{"location":"getting-started/#install-the-core-for-your-board","text":"To install the arduino:samd platform core, run the following: $ arduino-cli core install arduino:samd Downloading tools... arduino:arm-none-eabi-gcc@4.8.3-2014q1 downloaded arduino:bossac@1.7.0 downloaded arduino:openocd@0.9.0-arduino6-static downloaded arduino:CMSIS@4.5.0 downloaded arduino:CMSIS-Atmel@1.1.0 downloaded arduino:arduinoOTA@1.2.0 downloaded Downloading cores... arduino:samd@1.6.19 downloaded Installing tools... Installing platforms... Results: arduino:samd@1.6.19 - Installed arduino:arm-none-eabi-gcc@4.8.3-2014q1 - Installed arduino:bossac@1.7.0 - Installed arduino:openocd@0.9.0-arduino6-static - Installed arduino:CMSIS@4.5.0 - Installed arduino:CMSIS-Atmel@1.1.0 - Installed arduino:arduinoOTA@1.2.0 - Installed Now verify we have installed the core properly by running: $ arduino-cli core list ID Installed Latest Name arduino:samd 1 .6.19 1 .6.19 Arduino SAMD Boards ( 32 -bits ARM Cortex-M0+ ) Great! Now we are ready to compile and upload the sketch.","title":"Install the core for your board"},{"location":"getting-started/#adding-3rd-party-cores","text":"If your board requires 3 rd party core packages to work, you can list the URLs to additional package indexes in the Arduino CLI configuration file. For example, to add the ESP8266 core, edit the configuration file and change the board_manager settings as follows: board_manager : additional_urls : - https://arduino.esp8266.com/stable/package_esp8266com_index.json From now on, commands supporting custom cores will automatically use the additional URL from the configuration file: $ arduino-cli core update-index Updating index: package_index.json downloaded Updating index: package_esp8266com_index.json downloaded Updating index: package_index.json downloaded $ arduino-cli core search esp8266 ID Version Name esp8266:esp8266 2 .5.2 esp8266 Alternatively, you can pass a link to the the additional package index file with the --additional-urls option, that has to be specified every time and for every command that operates on a 3 rd party platform core, for example: $ arduino-cli core update-index --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json Updating index: package_esp8266com_index.json downloaded $ arduino-cli core search esp8266 --additional-urls https://arduino.esp8266.com/stable/package_esp8266com_index.json ID Version Name esp8266:esp8266 2 .5.2 esp8266","title":"Adding 3rd party cores"},{"location":"getting-started/#compile-and-upload-the-sketch","text":"To compile the sketch you run the compile command passing the proper FQBN string: $ arduino-cli compile --fqbn arduino:samd:mkr1000 MyFirstSketch Sketch uses 9600 bytes ( 3 % ) of program storage space. Maximum is 262144 bytes. To upload the sketch to your board, run the following command, this time also providing the serial port where the board is connected: $ arduino-cli upload -p /dev/ttyACM0 --fqbn arduino:samd:mkr1000 MyFirstSketch No new serial port detected. Atmel SMART device 0x10010005 found Device : ATSAMD21G18A Chip ID : 10010005 Version : v2.0 [ Arduino:XYZ ] Dec 20 2016 15 :36:43 Address : 8192 Pages : 3968 Page Size : 64 bytes Total Size : 248KB Planes : 1 Lock Regions : 16 Locked : none Security : false Boot Flash : true BOD : true BOR : true Arduino : FAST_CHIP_ERASE Arduino : FAST_MULTI_PAGE_WRITE Arduino : CAN_CHECKSUM_MEMORY_BUFFER Erase flash done in 0 .784 seconds Write 9856 bytes to flash ( 154 pages ) [==============================] 100 % ( 154 /154 pages ) done in 0 .069 seconds Verify 9856 bytes of flash with checksum. Verify successful done in 0 .009 seconds CPU reset.","title":"Compile and upload the sketch"},{"location":"getting-started/#add-libraries","text":"If you need to add more functionalities to your sketch, chances are some of the libraries available in the Arduino ecosystem already provide what you need. For example, if you need a debouncing strategy to better handle button inputs, you can try searching for the debouncer keyword: $ arduino-cli lib search debouncer Name: \"Debouncer\" Author: hideakitai Maintainer: hideakitai Sentence: Debounce library for Arduino Paragraph: Debounce library for Arduino Website: https://github.com/hideakitai Category: Timing Architecture: * Types: Contributed Versions: [ 0 .1.0 ] Name: \"FTDebouncer\" Author: Ubi de Feo Maintainer: Ubi de Feo, Sebastian Hunkeler Sentence: An efficient, low footprint, fast pin debouncing library for Arduino Paragraph: This pin state supervisor manages debouncing of buttons and handles transitions between LOW and HIGH state, calling a function and notifying your code of which pin has been activated or deactivated. Website: https://github.com/ubidefeo/FTDebouncer Category: Uncategorized Architecture: * Types: Contributed Versions: [ 1 .3.0 ] Name: \"SoftTimer\" Author: Balazs Kelemen <prampec+arduino@gmail.com> Maintainer: Balazs Kelemen <prampec+arduino@gmail.com> Sentence: SoftTimer is a lightweight pseudo multitasking solution for Arduino. Paragraph: SoftTimer enables higher level Arduino programing, yet easy to use, and lightweight. You are often faced with the problem that you need to do multiple tasks at the same time. In SoftTimer, the programmer creates Tasks that runs periodically. This library comes with a collection of handy tools like blinker, pwm, debouncer. Website: https://github.com/prampec/arduino-softtimer Category: Timing Architecture: * Types: Contributed Versions: [ 3 .0.0, 3 .1.0, 3 .1.1, 3 .1.2, 3 .1.3, 3 .1.5, 3 .2.0 ] Our favourite is FTDebouncer , let's install it by running: $ arduino-cli lib install FTDebouncer FTDebouncer depends on FTDebouncer@1.3.0 Downloading FTDebouncer@1.3.0... FTDebouncer@1.3.0 downloaded Installing FTDebouncer@1.3.0... Installed FTDebouncer@1.3.0","title":"Add libraries"},{"location":"getting-started/#using-the-daemon-mode-and-the-grpc-interface","text":"Arduino CLI can be launched as a gRPC server via the daemon command. The client_example folder contains a sample client code that shows how to interact with the gRPC server. Available services and messages are detailed in the gRPC reference pages. To provide observability for the gRPC server activities besides logs, the daemon mode activates and exposes by default a Prometheus endpoint ( http://localhost:9090/metrics ) that can be fetched for telemetry data like: # TYPE daemon_compile counter daemon_compile{buildProperties=\"\",exportFile=\"\",fqbn=\"arduino:samd:mkr1000\",installationID=\"ed6f1f22-1fbe-4b1f-84be-84d035b6369c\",jobs=\"0\",libraries=\"\",preprocess=\"false\",quiet=\"false\",showProperties=\"false\",sketchPath=\"5ff767c6fa5a91230f5cb4e267c889aa61489ab2c4f70f35f921f934c1462cb6\",success=\"true\",verbose=\"true\",vidPid=\"\",warnings=\"\"} 1 1580385724726 # TYPE daemon_board_list counter daemon_board_list{installationID=\"ed6f1f22-1fbe-4b1f-84be-84d035b6369c\",success=\"true\"} 1 1580385724833 The telemetry settings are exposed via the telemetry section in the CLI configuration: telemetry : enabled : true addr : :9090","title":"Using the daemon mode and the gRPC interface"},{"location":"installation/","text":"Install via Homebrew (macOS/Linux) \u00b6 The Arduino CLI is available as a Homebrew formula since version 0.5.0 : brew update brew install arduino-cli Use the install script \u00b6 The easiest way to get the latest version of the Arduino CLI on any supported platform is using the install.sh script: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh The script will install arduino-cli at $PWD/bin but if you want to target a different directory, for example ~/local/bin , set the BINDIR environment variable like this: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR = ~/local/bin sh Download the latest packages \u00b6 You can download the latest version of the pre-built binaries for the supported platforms from the release page or following the links in the following table. Once downloaded, extract the binary arduino-cli into a directory that's is in your PATH . Platform Linux Linux 32 bit Linux 64 bit Linux ARM Linux ARM 32 bit Linux ARM 64 bit Windows Windows 32 bit Windows 64 bit Mac OSX Mac OSX Deprecation notice : links in the form http://downloads.arduino.cc/arduino-cli/arduino-cli-latest-<platform>.tar.bz2 won\u2019t be further updated. That URL will provide the version 0.3.7-alpha.preview , regardless of further releases. Download a nightly build \u00b6 These builds are generated everyday at 01:00 GMT from the master branch and should be considered unstable. In order to get the latest nightly build available for the supported platform, use the following links: Platform Linux Nightly Linux 32 bit Nightly Linux 64 bit Linux ARM Nightly Linux ARM 32 bit Nightly Linux ARM 64 bit Windows Nightly Windows 32 bit Nightly Windows 64 bit Mac OSX Mac OSX These links return a 302: Found response, redirecting to latest generated builds by replacing latest with the latest available build date, using the format YYYYMMDD (i.e for 2019/Aug/06 latest is replaced with 20190806 ) Checksums for the nightly builds are available at https://downloads.arduino.cc/arduino-cli/nightly/nightly-<DATE>-checksums.txt Once downloaded, extract the executable arduino-cli into a directory which is in your PATH . Build from source \u00b6 If you\u2019re familiar with Golang or if you want to contribute to the project, you will probably build the arduino-cli locally with your Go toolchain. Please refer to the [contributing] document for setup instructions. If you don\u2019t have a working Golang environment or if you want to build arduino-cli targeting different platforms, you can use Docker to get a binary directly from sources. From the project folder run: docker run -v $PWD :/arduino-cli -w /arduino-cli -e PACKAGE_NAME_PREFIX = 'snapshot' arduino/arduino-cli:builder-1 goreleaser --rm-dist --snapshot --skip-publish Once the build is over, you will find a ./dist/ folder containing the packages built out of the current source tree.","title":"Installation"},{"location":"installation/#install-via-homebrew-macoslinux","text":"The Arduino CLI is available as a Homebrew formula since version 0.5.0 : brew update brew install arduino-cli","title":"Install via Homebrew (macOS/Linux)"},{"location":"installation/#use-the-install-script","text":"The easiest way to get the latest version of the Arduino CLI on any supported platform is using the install.sh script: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh The script will install arduino-cli at $PWD/bin but if you want to target a different directory, for example ~/local/bin , set the BINDIR environment variable like this: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR = ~/local/bin sh","title":"Use the install script"},{"location":"installation/#download-the-latest-packages","text":"You can download the latest version of the pre-built binaries for the supported platforms from the release page or following the links in the following table. Once downloaded, extract the binary arduino-cli into a directory that's is in your PATH . Platform Linux Linux 32 bit Linux 64 bit Linux ARM Linux ARM 32 bit Linux ARM 64 bit Windows Windows 32 bit Windows 64 bit Mac OSX Mac OSX Deprecation notice : links in the form http://downloads.arduino.cc/arduino-cli/arduino-cli-latest-<platform>.tar.bz2 won\u2019t be further updated. That URL will provide the version 0.3.7-alpha.preview , regardless of further releases.","title":"Download the latest packages"},{"location":"installation/#download-a-nightly-build","text":"These builds are generated everyday at 01:00 GMT from the master branch and should be considered unstable. In order to get the latest nightly build available for the supported platform, use the following links: Platform Linux Nightly Linux 32 bit Nightly Linux 64 bit Linux ARM Nightly Linux ARM 32 bit Nightly Linux ARM 64 bit Windows Nightly Windows 32 bit Nightly Windows 64 bit Mac OSX Mac OSX These links return a 302: Found response, redirecting to latest generated builds by replacing latest with the latest available build date, using the format YYYYMMDD (i.e for 2019/Aug/06 latest is replaced with 20190806 ) Checksums for the nightly builds are available at https://downloads.arduino.cc/arduino-cli/nightly/nightly-<DATE>-checksums.txt Once downloaded, extract the executable arduino-cli into a directory which is in your PATH .","title":"Download a nightly build"},{"location":"installation/#build-from-source","text":"If you\u2019re familiar with Golang or if you want to contribute to the project, you will probably build the arduino-cli locally with your Go toolchain. Please refer to the [contributing] document for setup instructions. If you don\u2019t have a working Golang environment or if you want to build arduino-cli targeting different platforms, you can use Docker to get a binary directly from sources. From the project folder run: docker run -v $PWD :/arduino-cli -w /arduino-cli -e PACKAGE_NAME_PREFIX = 'snapshot' arduino/arduino-cli:builder-1 goreleaser --rm-dist --snapshot --skip-publish Once the build is over, you will find a ./dist/ folder containing the packages built out of the current source tree.","title":"Build from source"},{"location":"commands/arduino-cli/","text":"arduino-cli \u00b6 Arduino CLI. Synopsis \u00b6 Arduino Command Line Interface (arduino-cli). Examples \u00b6 arduino-cli <command> [flags...] Options \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") -h, --help help for arduino-cli --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli board - Arduino board commands. arduino-cli cache - Arduino cache commands. arduino-cli compile - Compiles Arduino sketches. arduino-cli config - Arduino Configuration Commands. arduino-cli core - Arduino Core operations. arduino-cli daemon - Run as a daemon on port arduino-cli debug - Debug Arduino sketches. arduino-cli lib - Arduino commands about libraries. arduino-cli sketch - Arduino CLI Sketch Commands. arduino-cli upload - Upload Arduino sketches. arduino-cli version - Shows version number of arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"Arduino cli"},{"location":"commands/arduino-cli/#arduino-cli","text":"Arduino CLI.","title":"arduino-cli"},{"location":"commands/arduino-cli/#synopsis","text":"Arduino Command Line Interface (arduino-cli).","title":"Synopsis"},{"location":"commands/arduino-cli/#examples","text":"arduino-cli <command> [flags...]","title":"Examples"},{"location":"commands/arduino-cli/#options","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") -h, --help help for arduino-cli --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options"},{"location":"commands/arduino-cli/#see-also","text":"arduino-cli board - Arduino board commands. arduino-cli cache - Arduino cache commands. arduino-cli compile - Compiles Arduino sketches. arduino-cli config - Arduino Configuration Commands. arduino-cli core - Arduino Core operations. arduino-cli daemon - Run as a daemon on port arduino-cli debug - Debug Arduino sketches. arduino-cli lib - Arduino commands about libraries. arduino-cli sketch - Arduino CLI Sketch Commands. arduino-cli upload - Upload Arduino sketches. arduino-cli version - Shows version number of arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_board/","text":"arduino-cli board \u00b6 Arduino board commands. Synopsis \u00b6 Arduino board commands. Examples \u00b6 # Lists all connected boards. arduino-cli board list # Attaches a sketch to a board. arduino-cli board attach serial:///dev/tty/ACM0 mySketch Options \u00b6 -h, --help help for board Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli board attach - Attaches a sketch to a board. arduino-cli board details - Print details about a board. arduino-cli board list - List connected boards. arduino-cli board listall - List all known boards and their corresponding FQBN. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"board"},{"location":"commands/arduino-cli_board/#arduino-cli-board","text":"Arduino board commands.","title":"arduino-cli board"},{"location":"commands/arduino-cli_board/#synopsis","text":"Arduino board commands.","title":"Synopsis"},{"location":"commands/arduino-cli_board/#examples","text":"# Lists all connected boards. arduino-cli board list # Attaches a sketch to a board. arduino-cli board attach serial:///dev/tty/ACM0 mySketch","title":"Examples"},{"location":"commands/arduino-cli_board/#options","text":"-h, --help help for board","title":"Options"},{"location":"commands/arduino-cli_board/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_board/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli board attach - Attaches a sketch to a board. arduino-cli board details - Print details about a board. arduino-cli board list - List connected boards. arduino-cli board listall - List all known boards and their corresponding FQBN.","title":"SEE ALSO"},{"location":"commands/arduino-cli_board/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_board_attach/","text":"arduino-cli board attach \u00b6 Attaches a sketch to a board. Synopsis \u00b6 Attaches a sketch to a board. arduino-cli board attach <port>|<FQBN> [sketchPath] [flags] Examples \u00b6 arduino-cli board attach serial:///dev/tty/ACM0 arduino-cli board attach serial:///dev/tty/ACM0 HelloWorld arduino-cli board attach arduino:samd:mkr1000 Options \u00b6 -h, --help help for attach --timeout string The timeout of the search of connected devices, try to high it if your board is not found (e.g. to 10s). (default \"5s\") Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli board - Arduino board commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"board attach"},{"location":"commands/arduino-cli_board_attach/#arduino-cli-board-attach","text":"Attaches a sketch to a board.","title":"arduino-cli board attach"},{"location":"commands/arduino-cli_board_attach/#synopsis","text":"Attaches a sketch to a board. arduino-cli board attach <port>|<FQBN> [sketchPath] [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_board_attach/#examples","text":"arduino-cli board attach serial:///dev/tty/ACM0 arduino-cli board attach serial:///dev/tty/ACM0 HelloWorld arduino-cli board attach arduino:samd:mkr1000","title":"Examples"},{"location":"commands/arduino-cli_board_attach/#options","text":"-h, --help help for attach --timeout string The timeout of the search of connected devices, try to high it if your board is not found (e.g. to 10s). (default \"5s\")","title":"Options"},{"location":"commands/arduino-cli_board_attach/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_board_attach/#see-also","text":"arduino-cli board - Arduino board commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_board_attach/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_board_details/","text":"arduino-cli board details \u00b6 Print details about a board. Synopsis \u00b6 Show information about a board, in particular if the board has options to be specified in the FQBN. arduino-cli board details <FQBN> [flags] Examples \u00b6 arduino-cli board details arduino:avr:nano Options \u00b6 -h, --help help for details Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli board - Arduino board commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"board details"},{"location":"commands/arduino-cli_board_details/#arduino-cli-board-details","text":"Print details about a board.","title":"arduino-cli board details"},{"location":"commands/arduino-cli_board_details/#synopsis","text":"Show information about a board, in particular if the board has options to be specified in the FQBN. arduino-cli board details <FQBN> [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_board_details/#examples","text":"arduino-cli board details arduino:avr:nano","title":"Examples"},{"location":"commands/arduino-cli_board_details/#options","text":"-h, --help help for details","title":"Options"},{"location":"commands/arduino-cli_board_details/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_board_details/#see-also","text":"arduino-cli board - Arduino board commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_board_details/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_board_list/","text":"arduino-cli board list \u00b6 List connected boards. Synopsis \u00b6 Detects and displays a list of connected boards to the current computer. arduino-cli board list [flags] Examples \u00b6 arduino-cli board list --timeout 10s Options \u00b6 -h, --help help for list --timeout string The timeout of the search of connected devices, try to increase it if your board is not found (e.g. to 10s). (default \"0s\") Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli board - Arduino board commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"board list"},{"location":"commands/arduino-cli_board_list/#arduino-cli-board-list","text":"List connected boards.","title":"arduino-cli board list"},{"location":"commands/arduino-cli_board_list/#synopsis","text":"Detects and displays a list of connected boards to the current computer. arduino-cli board list [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_board_list/#examples","text":"arduino-cli board list --timeout 10s","title":"Examples"},{"location":"commands/arduino-cli_board_list/#options","text":"-h, --help help for list --timeout string The timeout of the search of connected devices, try to increase it if your board is not found (e.g. to 10s). (default \"0s\")","title":"Options"},{"location":"commands/arduino-cli_board_list/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_board_list/#see-also","text":"arduino-cli board - Arduino board commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_board_list/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_board_listall/","text":"arduino-cli board listall \u00b6 List all known boards and their corresponding FQBN. Synopsis \u00b6 List all boards that have the support platform installed. You can search for a specific board if you specify the board name arduino-cli board listall [boardname] [flags] Examples \u00b6 arduino-cli board listall arduino-cli board listall zero Options \u00b6 -h, --help help for listall Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli board - Arduino board commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"board listall"},{"location":"commands/arduino-cli_board_listall/#arduino-cli-board-listall","text":"List all known boards and their corresponding FQBN.","title":"arduino-cli board listall"},{"location":"commands/arduino-cli_board_listall/#synopsis","text":"List all boards that have the support platform installed. You can search for a specific board if you specify the board name arduino-cli board listall [boardname] [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_board_listall/#examples","text":"arduino-cli board listall arduino-cli board listall zero","title":"Examples"},{"location":"commands/arduino-cli_board_listall/#options","text":"-h, --help help for listall","title":"Options"},{"location":"commands/arduino-cli_board_listall/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_board_listall/#see-also","text":"arduino-cli board - Arduino board commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_board_listall/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_cache/","text":"arduino-cli cache \u00b6 Arduino cache commands. Synopsis \u00b6 Arduino cache commands. Examples \u00b6 # Clean caches. arduino-cli cache clean Options \u00b6 -h, --help help for cache Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli cache clean - Clean arduino cache. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"cache"},{"location":"commands/arduino-cli_cache/#arduino-cli-cache","text":"Arduino cache commands.","title":"arduino-cli cache"},{"location":"commands/arduino-cli_cache/#synopsis","text":"Arduino cache commands.","title":"Synopsis"},{"location":"commands/arduino-cli_cache/#examples","text":"# Clean caches. arduino-cli cache clean","title":"Examples"},{"location":"commands/arduino-cli_cache/#options","text":"-h, --help help for cache","title":"Options"},{"location":"commands/arduino-cli_cache/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_cache/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli cache clean - Clean arduino cache.","title":"SEE ALSO"},{"location":"commands/arduino-cli_cache/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_cache_clean/","text":"arduino-cli cache clean \u00b6 Clean arduino cache. Synopsis \u00b6 Clean the files i.e. ~/arduino15/staging in Linux. arduino-cli cache clean [flags] Examples \u00b6 arduino-cli cache clean Options \u00b6 -h, --help help for clean Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli cache - Arduino cache commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"cache clean"},{"location":"commands/arduino-cli_cache_clean/#arduino-cli-cache-clean","text":"Clean arduino cache.","title":"arduino-cli cache clean"},{"location":"commands/arduino-cli_cache_clean/#synopsis","text":"Clean the files i.e. ~/arduino15/staging in Linux. arduino-cli cache clean [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_cache_clean/#examples","text":"arduino-cli cache clean","title":"Examples"},{"location":"commands/arduino-cli_cache_clean/#options","text":"-h, --help help for clean","title":"Options"},{"location":"commands/arduino-cli_cache_clean/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_cache_clean/#see-also","text":"arduino-cli cache - Arduino cache commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_cache_clean/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_compile/","text":"arduino-cli compile \u00b6 Compiles Arduino sketches. Synopsis \u00b6 Compiles Arduino sketches. arduino-cli compile [flags] Examples \u00b6 arduino-cli compile -b arduino:avr:uno /home/user/Arduino/MySketch Options \u00b6 --build-cache-path string Builds of 'core.a' are saved into this path to be cached and reused. --build-path string Path where to save compiled files. If omitted, a directory will be created in the default temporary path of your OS. --build-properties strings List of custom build properties separated by commas. Or can be used multiple times for multiple properties. -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for compile --libraries strings List of custom libraries paths separated by commas. Or can be used multiple times for multiple libraries paths. --optimize-for-debug Optional, optimize compile output for debug, not for release. -o, --output string Filename of the compile output. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0 --preprocess Print preprocessed code to stdout instead of compiling. --quiet Optional, supresses almost every output. --show-properties Show all build properties used instead of compiling. -u, --upload Upload the binary after the compilation. -t, --verify Verify uploaded binary after the upload. --vid-pid string When specified, VID/PID specific build properties are used, if boards supports them. --warnings string Optional, can be \"none\", \"default\", \"more\" and \"all\". Defaults to \"none\". Used to tell gcc which warning level to use (-W flag). (default \"none\") Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"compile"},{"location":"commands/arduino-cli_compile/#arduino-cli-compile","text":"Compiles Arduino sketches.","title":"arduino-cli compile"},{"location":"commands/arduino-cli_compile/#synopsis","text":"Compiles Arduino sketches. arduino-cli compile [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_compile/#examples","text":"arduino-cli compile -b arduino:avr:uno /home/user/Arduino/MySketch","title":"Examples"},{"location":"commands/arduino-cli_compile/#options","text":"--build-cache-path string Builds of 'core.a' are saved into this path to be cached and reused. --build-path string Path where to save compiled files. If omitted, a directory will be created in the default temporary path of your OS. --build-properties strings List of custom build properties separated by commas. Or can be used multiple times for multiple properties. -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for compile --libraries strings List of custom libraries paths separated by commas. Or can be used multiple times for multiple libraries paths. --optimize-for-debug Optional, optimize compile output for debug, not for release. -o, --output string Filename of the compile output. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0 --preprocess Print preprocessed code to stdout instead of compiling. --quiet Optional, supresses almost every output. --show-properties Show all build properties used instead of compiling. -u, --upload Upload the binary after the compilation. -t, --verify Verify uploaded binary after the upload. --vid-pid string When specified, VID/PID specific build properties are used, if boards supports them. --warnings string Optional, can be \"none\", \"default\", \"more\" and \"all\". Defaults to \"none\". Used to tell gcc which warning level to use (-W flag). (default \"none\")","title":"Options"},{"location":"commands/arduino-cli_compile/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_compile/#see-also","text":"arduino-cli - Arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli_compile/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_config/","text":"arduino-cli config \u00b6 Arduino Configuration Commands. Synopsis \u00b6 Arduino Configuration Commands. Examples \u00b6 arduino-cli config init Options \u00b6 -h, --help help for config Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli config dump - Prints the current configuration arduino-cli config init - Initializes a new configuration file into the default location. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"config"},{"location":"commands/arduino-cli_config/#arduino-cli-config","text":"Arduino Configuration Commands.","title":"arduino-cli config"},{"location":"commands/arduino-cli_config/#synopsis","text":"Arduino Configuration Commands.","title":"Synopsis"},{"location":"commands/arduino-cli_config/#examples","text":"arduino-cli config init","title":"Examples"},{"location":"commands/arduino-cli_config/#options","text":"-h, --help help for config","title":"Options"},{"location":"commands/arduino-cli_config/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_config/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli config dump - Prints the current configuration arduino-cli config init - Initializes a new configuration file into the default location.","title":"SEE ALSO"},{"location":"commands/arduino-cli_config/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_config_dump/","text":"arduino-cli config dump \u00b6 Prints the current configuration Synopsis \u00b6 Prints the current configuration. arduino-cli config dump [flags] Examples \u00b6 arduino-cli config dump Options \u00b6 -h, --help help for dump Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli config - Arduino Configuration Commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"config dump"},{"location":"commands/arduino-cli_config_dump/#arduino-cli-config-dump","text":"Prints the current configuration","title":"arduino-cli config dump"},{"location":"commands/arduino-cli_config_dump/#synopsis","text":"Prints the current configuration. arduino-cli config dump [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_config_dump/#examples","text":"arduino-cli config dump","title":"Examples"},{"location":"commands/arduino-cli_config_dump/#options","text":"-h, --help help for dump","title":"Options"},{"location":"commands/arduino-cli_config_dump/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_config_dump/#see-also","text":"arduino-cli config - Arduino Configuration Commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_config_dump/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_config_init/","text":"arduino-cli config init \u00b6 Initializes a new configuration file into the default location. Synopsis \u00b6 Initializes a new configuration file into the default location ($EXE_DIR/cli-config.yml). arduino-cli config init [flags] Examples \u00b6 # Creates a default configuration file into the default location. arduino-cli config init Options \u00b6 --dest-dir string Sets where to save the configuration file. -h, --help help for init Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli config - Arduino Configuration Commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"config init"},{"location":"commands/arduino-cli_config_init/#arduino-cli-config-init","text":"Initializes a new configuration file into the default location.","title":"arduino-cli config init"},{"location":"commands/arduino-cli_config_init/#synopsis","text":"Initializes a new configuration file into the default location ($EXE_DIR/cli-config.yml). arduino-cli config init [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_config_init/#examples","text":"# Creates a default configuration file into the default location. arduino-cli config init","title":"Examples"},{"location":"commands/arduino-cli_config_init/#options","text":"--dest-dir string Sets where to save the configuration file. -h, --help help for init","title":"Options"},{"location":"commands/arduino-cli_config_init/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_config_init/#see-also","text":"arduino-cli config - Arduino Configuration Commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_config_init/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core/","text":"arduino-cli core \u00b6 Arduino Core operations. Synopsis \u00b6 Arduino Core operations. Examples \u00b6 arduino-cli core update-index Options \u00b6 -h, --help help for core Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli core download - Downloads one or more cores and corresponding tool dependencies. arduino-cli core install - Installs one or more cores and corresponding tool dependencies. arduino-cli core list - Shows the list of installed platforms. arduino-cli core search - Search for a core in the package index. arduino-cli core uninstall - Uninstalls one or more cores and corresponding tool dependencies if no more used. arduino-cli core update-index - Updates the index of cores. arduino-cli core upgrade - Upgrades one or all installed platforms to the latest version. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core"},{"location":"commands/arduino-cli_core/#arduino-cli-core","text":"Arduino Core operations.","title":"arduino-cli core"},{"location":"commands/arduino-cli_core/#synopsis","text":"Arduino Core operations.","title":"Synopsis"},{"location":"commands/arduino-cli_core/#examples","text":"arduino-cli core update-index","title":"Examples"},{"location":"commands/arduino-cli_core/#options","text":"-h, --help help for core","title":"Options"},{"location":"commands/arduino-cli_core/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli core download - Downloads one or more cores and corresponding tool dependencies. arduino-cli core install - Installs one or more cores and corresponding tool dependencies. arduino-cli core list - Shows the list of installed platforms. arduino-cli core search - Search for a core in the package index. arduino-cli core uninstall - Uninstalls one or more cores and corresponding tool dependencies if no more used. arduino-cli core update-index - Updates the index of cores. arduino-cli core upgrade - Upgrades one or all installed platforms to the latest version.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_download/","text":"arduino-cli core download \u00b6 Downloads one or more cores and corresponding tool dependencies. Synopsis \u00b6 Downloads one or more cores and corresponding tool dependencies. arduino-cli core download [PACKAGER:ARCH[=VERSION]](S) [flags] Examples \u00b6 arduino-cli core download arduino:samd # to download the latest version of arduino SAMD core. arduino-cli core download arduino:samd=1.6.9 # for a specific version (in this case 1.6.9). Options \u00b6 -h, --help help for download Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core download"},{"location":"commands/arduino-cli_core_download/#arduino-cli-core-download","text":"Downloads one or more cores and corresponding tool dependencies.","title":"arduino-cli core download"},{"location":"commands/arduino-cli_core_download/#synopsis","text":"Downloads one or more cores and corresponding tool dependencies. arduino-cli core download [PACKAGER:ARCH[=VERSION]](S) [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_download/#examples","text":"arduino-cli core download arduino:samd # to download the latest version of arduino SAMD core. arduino-cli core download arduino:samd=1.6.9 # for a specific version (in this case 1.6.9).","title":"Examples"},{"location":"commands/arduino-cli_core_download/#options","text":"-h, --help help for download","title":"Options"},{"location":"commands/arduino-cli_core_download/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_download/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_download/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_install/","text":"arduino-cli core install \u00b6 Installs one or more cores and corresponding tool dependencies. Synopsis \u00b6 Installs one or more cores and corresponding tool dependencies. arduino-cli core install PACKAGER:ARCH[@VERSION] ... [flags] Examples \u00b6 # download the latest version of arduino SAMD core. arduino-cli core install arduino:samd # download a specific version (in this case 1.6.9). arduino-cli core install arduino:samd@1.6.9 Options \u00b6 -h, --help help for install Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core install"},{"location":"commands/arduino-cli_core_install/#arduino-cli-core-install","text":"Installs one or more cores and corresponding tool dependencies.","title":"arduino-cli core install"},{"location":"commands/arduino-cli_core_install/#synopsis","text":"Installs one or more cores and corresponding tool dependencies. arduino-cli core install PACKAGER:ARCH[@VERSION] ... [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_install/#examples","text":"# download the latest version of arduino SAMD core. arduino-cli core install arduino:samd # download a specific version (in this case 1.6.9). arduino-cli core install arduino:samd@1.6.9","title":"Examples"},{"location":"commands/arduino-cli_core_install/#options","text":"-h, --help help for install","title":"Options"},{"location":"commands/arduino-cli_core_install/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_install/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_install/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_list/","text":"arduino-cli core list \u00b6 Shows the list of installed platforms. Synopsis \u00b6 Shows the list of installed platforms. arduino-cli core list [flags] Examples \u00b6 arduino-cli core list Options \u00b6 -h, --help help for list --updatable List updatable platforms. Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core list"},{"location":"commands/arduino-cli_core_list/#arduino-cli-core-list","text":"Shows the list of installed platforms.","title":"arduino-cli core list"},{"location":"commands/arduino-cli_core_list/#synopsis","text":"Shows the list of installed platforms. arduino-cli core list [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_list/#examples","text":"arduino-cli core list","title":"Examples"},{"location":"commands/arduino-cli_core_list/#options","text":"-h, --help help for list --updatable List updatable platforms.","title":"Options"},{"location":"commands/arduino-cli_core_list/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_list/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_list/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_search/","text":"arduino-cli core search \u00b6 Search for a core in the package index. Synopsis \u00b6 Search for a core in the package index using the specified keywords. arduino-cli core search <keywords...> [flags] Examples \u00b6 arduino-cli core search MKRZero -a -v Options \u00b6 -a, --all Show all available core versions. -h, --help help for search Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core search"},{"location":"commands/arduino-cli_core_search/#arduino-cli-core-search","text":"Search for a core in the package index.","title":"arduino-cli core search"},{"location":"commands/arduino-cli_core_search/#synopsis","text":"Search for a core in the package index using the specified keywords. arduino-cli core search <keywords...> [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_search/#examples","text":"arduino-cli core search MKRZero -a -v","title":"Examples"},{"location":"commands/arduino-cli_core_search/#options","text":"-a, --all Show all available core versions. -h, --help help for search","title":"Options"},{"location":"commands/arduino-cli_core_search/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_search/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_search/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_uninstall/","text":"arduino-cli core uninstall \u00b6 Uninstalls one or more cores and corresponding tool dependencies if no more used. Synopsis \u00b6 Uninstalls one or more cores and corresponding tool dependencies if no more used. arduino-cli core uninstall PACKAGER:ARCH ... [flags] Examples \u00b6 arduino-cli core uninstall arduino:samd Options \u00b6 -h, --help help for uninstall Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core uninstall"},{"location":"commands/arduino-cli_core_uninstall/#arduino-cli-core-uninstall","text":"Uninstalls one or more cores and corresponding tool dependencies if no more used.","title":"arduino-cli core uninstall"},{"location":"commands/arduino-cli_core_uninstall/#synopsis","text":"Uninstalls one or more cores and corresponding tool dependencies if no more used. arduino-cli core uninstall PACKAGER:ARCH ... [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_uninstall/#examples","text":"arduino-cli core uninstall arduino:samd","title":"Examples"},{"location":"commands/arduino-cli_core_uninstall/#options","text":"-h, --help help for uninstall","title":"Options"},{"location":"commands/arduino-cli_core_uninstall/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_uninstall/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_uninstall/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_update-index/","text":"arduino-cli core update-index \u00b6 Updates the index of cores. Synopsis \u00b6 Updates the index of cores to the latest version. arduino-cli core update-index [flags] Examples \u00b6 arduino-cli core update-index Options \u00b6 -h, --help help for update-index Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core update index"},{"location":"commands/arduino-cli_core_update-index/#arduino-cli-core-update-index","text":"Updates the index of cores.","title":"arduino-cli core update-index"},{"location":"commands/arduino-cli_core_update-index/#synopsis","text":"Updates the index of cores to the latest version. arduino-cli core update-index [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_update-index/#examples","text":"arduino-cli core update-index","title":"Examples"},{"location":"commands/arduino-cli_core_update-index/#options","text":"-h, --help help for update-index","title":"Options"},{"location":"commands/arduino-cli_core_update-index/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_update-index/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_update-index/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_core_upgrade/","text":"arduino-cli core upgrade \u00b6 Upgrades one or all installed platforms to the latest version. Synopsis \u00b6 Upgrades one or all installed platforms to the latest version. arduino-cli core upgrade [PACKAGER:ARCH] ... [flags] Examples \u00b6 # upgrade everything to the latest version arduino-cli core upgrade # upgrade arduino:samd to the latest version arduino-cli core upgrade arduino:samd Options \u00b6 -h, --help help for upgrade Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli core - Arduino Core operations. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"core upgrade"},{"location":"commands/arduino-cli_core_upgrade/#arduino-cli-core-upgrade","text":"Upgrades one or all installed platforms to the latest version.","title":"arduino-cli core upgrade"},{"location":"commands/arduino-cli_core_upgrade/#synopsis","text":"Upgrades one or all installed platforms to the latest version. arduino-cli core upgrade [PACKAGER:ARCH] ... [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_core_upgrade/#examples","text":"# upgrade everything to the latest version arduino-cli core upgrade # upgrade arduino:samd to the latest version arduino-cli core upgrade arduino:samd","title":"Examples"},{"location":"commands/arduino-cli_core_upgrade/#options","text":"-h, --help help for upgrade","title":"Options"},{"location":"commands/arduino-cli_core_upgrade/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_core_upgrade/#see-also","text":"arduino-cli core - Arduino Core operations.","title":"SEE ALSO"},{"location":"commands/arduino-cli_core_upgrade/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_daemon/","text":"arduino-cli daemon \u00b6 Run as a daemon on port Synopsis \u00b6 Running as a daemon the initialization of cores and libraries is done only once. arduino-cli daemon [flags] Examples \u00b6 arduino-cli daemon Options \u00b6 --daemonize Do not terminate daemon process if the parent process dies -h, --help help for daemon --port string The TCP port the daemon will listen to Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"daemon"},{"location":"commands/arduino-cli_daemon/#arduino-cli-daemon","text":"Run as a daemon on port","title":"arduino-cli daemon"},{"location":"commands/arduino-cli_daemon/#synopsis","text":"Running as a daemon the initialization of cores and libraries is done only once. arduino-cli daemon [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_daemon/#examples","text":"arduino-cli daemon","title":"Examples"},{"location":"commands/arduino-cli_daemon/#options","text":"--daemonize Do not terminate daemon process if the parent process dies -h, --help help for daemon --port string The TCP port the daemon will listen to","title":"Options"},{"location":"commands/arduino-cli_daemon/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_daemon/#see-also","text":"arduino-cli - Arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli_daemon/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_debug/","text":"arduino-cli debug \u00b6 Debug Arduino sketches. Synopsis \u00b6 Debug Arduino sketches. (this command opens an interactive gdb session) arduino-cli debug [flags] Examples \u00b6 arduino-cli debug -b arduino:samd:mkr1000 /home/user/Arduino/MySketch Options \u00b6 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for debug -i, --input string Input file to be uploaded for debug. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0 Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"debug"},{"location":"commands/arduino-cli_debug/#arduino-cli-debug","text":"Debug Arduino sketches.","title":"arduino-cli debug"},{"location":"commands/arduino-cli_debug/#synopsis","text":"Debug Arduino sketches. (this command opens an interactive gdb session) arduino-cli debug [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_debug/#examples","text":"arduino-cli debug -b arduino:samd:mkr1000 /home/user/Arduino/MySketch","title":"Examples"},{"location":"commands/arduino-cli_debug/#options","text":"-b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for debug -i, --input string Input file to be uploaded for debug. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0","title":"Options"},{"location":"commands/arduino-cli_debug/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_debug/#see-also","text":"arduino-cli - Arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli_debug/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib/","text":"arduino-cli lib \u00b6 Arduino commands about libraries. Synopsis \u00b6 Arduino commands about libraries. Examples \u00b6 arduino-cli lib install AudioZero arduino-cli lib update-index Options \u00b6 -h, --help help for lib Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli lib deps - Check dependencies status for the specified library. arduino-cli lib download - Downloads one or more libraries without installing them. arduino-cli lib install - Installs one of more specified libraries into the system. arduino-cli lib list - Shows a list of all installed libraries. arduino-cli lib search - Searches for one or more libraries data. arduino-cli lib uninstall - Uninstalls one or more libraries. arduino-cli lib update-index - Updates the libraries index. arduino-cli lib upgrade - Upgrades installed libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib"},{"location":"commands/arduino-cli_lib/#arduino-cli-lib","text":"Arduino commands about libraries.","title":"arduino-cli lib"},{"location":"commands/arduino-cli_lib/#synopsis","text":"Arduino commands about libraries.","title":"Synopsis"},{"location":"commands/arduino-cli_lib/#examples","text":"arduino-cli lib install AudioZero arduino-cli lib update-index","title":"Examples"},{"location":"commands/arduino-cli_lib/#options","text":"-h, --help help for lib","title":"Options"},{"location":"commands/arduino-cli_lib/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli lib deps - Check dependencies status for the specified library. arduino-cli lib download - Downloads one or more libraries without installing them. arduino-cli lib install - Installs one of more specified libraries into the system. arduino-cli lib list - Shows a list of all installed libraries. arduino-cli lib search - Searches for one or more libraries data. arduino-cli lib uninstall - Uninstalls one or more libraries. arduino-cli lib update-index - Updates the libraries index. arduino-cli lib upgrade - Upgrades installed libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_deps/","text":"arduino-cli lib deps \u00b6 Check dependencies status for the specified library. Synopsis \u00b6 Check dependencies status for the specified library. arduino-cli lib deps LIBRARY[@VERSION_NUMBER](S) [flags] Examples \u00b6 arduino-cli lib deps AudioZero # for the latest version. arduino-cli lib deps AudioZero@1.0.0 # for the specific version. Options \u00b6 -h, --help help for deps Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib deps"},{"location":"commands/arduino-cli_lib_deps/#arduino-cli-lib-deps","text":"Check dependencies status for the specified library.","title":"arduino-cli lib deps"},{"location":"commands/arduino-cli_lib_deps/#synopsis","text":"Check dependencies status for the specified library. arduino-cli lib deps LIBRARY[@VERSION_NUMBER](S) [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_deps/#examples","text":"arduino-cli lib deps AudioZero # for the latest version. arduino-cli lib deps AudioZero@1.0.0 # for the specific version.","title":"Examples"},{"location":"commands/arduino-cli_lib_deps/#options","text":"-h, --help help for deps","title":"Options"},{"location":"commands/arduino-cli_lib_deps/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_deps/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_deps/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_download/","text":"arduino-cli lib download \u00b6 Downloads one or more libraries without installing them. Synopsis \u00b6 Downloads one or more libraries without installing them. arduino-cli lib download [LIBRARY_NAME(S)] [flags] Examples \u00b6 arduino-cli lib download AudioZero # for the latest version. arduino-cli lib download AudioZero@1.0.0 # for a specific version. Options \u00b6 -h, --help help for download Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib download"},{"location":"commands/arduino-cli_lib_download/#arduino-cli-lib-download","text":"Downloads one or more libraries without installing them.","title":"arduino-cli lib download"},{"location":"commands/arduino-cli_lib_download/#synopsis","text":"Downloads one or more libraries without installing them. arduino-cli lib download [LIBRARY_NAME(S)] [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_download/#examples","text":"arduino-cli lib download AudioZero # for the latest version. arduino-cli lib download AudioZero@1.0.0 # for a specific version.","title":"Examples"},{"location":"commands/arduino-cli_lib_download/#options","text":"-h, --help help for download","title":"Options"},{"location":"commands/arduino-cli_lib_download/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_download/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_download/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_install/","text":"arduino-cli lib install \u00b6 Installs one of more specified libraries into the system. Synopsis \u00b6 Installs one or more specified libraries into the system. arduino-cli lib install LIBRARY[@VERSION_NUMBER](S) [flags] Examples \u00b6 arduino-cli lib install AudioZero # for the latest version. arduino-cli lib install AudioZero@1.0.0 # for the specific version. Options \u00b6 -h, --help help for install --no-deps Do not install dependencies. Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib install"},{"location":"commands/arduino-cli_lib_install/#arduino-cli-lib-install","text":"Installs one of more specified libraries into the system.","title":"arduino-cli lib install"},{"location":"commands/arduino-cli_lib_install/#synopsis","text":"Installs one or more specified libraries into the system. arduino-cli lib install LIBRARY[@VERSION_NUMBER](S) [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_install/#examples","text":"arduino-cli lib install AudioZero # for the latest version. arduino-cli lib install AudioZero@1.0.0 # for the specific version.","title":"Examples"},{"location":"commands/arduino-cli_lib_install/#options","text":"-h, --help help for install --no-deps Do not install dependencies.","title":"Options"},{"location":"commands/arduino-cli_lib_install/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_install/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_install/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_list/","text":"arduino-cli lib list \u00b6 Shows a list of all installed libraries. Synopsis \u00b6 Shows a list of all installed libraries. arduino-cli lib list [flags] Examples \u00b6 arduino-cli lib list Options \u00b6 --all Include built-in libraries (from platforms and IDE) in listing. -h, --help help for list --updatable List updatable libraries. Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib list"},{"location":"commands/arduino-cli_lib_list/#arduino-cli-lib-list","text":"Shows a list of all installed libraries.","title":"arduino-cli lib list"},{"location":"commands/arduino-cli_lib_list/#synopsis","text":"Shows a list of all installed libraries. arduino-cli lib list [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_list/#examples","text":"arduino-cli lib list","title":"Examples"},{"location":"commands/arduino-cli_lib_list/#options","text":"--all Include built-in libraries (from platforms and IDE) in listing. -h, --help help for list --updatable List updatable libraries.","title":"Options"},{"location":"commands/arduino-cli_lib_list/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_list/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_list/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_search/","text":"arduino-cli lib search \u00b6 Searches for one or more libraries data. Synopsis \u00b6 Search for one or more libraries data (case insensitive search). arduino-cli lib search [LIBRARY_NAME] [flags] Examples \u00b6 arduino-cli lib search audio Options \u00b6 -h, --help help for search --names Show library names only. Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib search"},{"location":"commands/arduino-cli_lib_search/#arduino-cli-lib-search","text":"Searches for one or more libraries data.","title":"arduino-cli lib search"},{"location":"commands/arduino-cli_lib_search/#synopsis","text":"Search for one or more libraries data (case insensitive search). arduino-cli lib search [LIBRARY_NAME] [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_search/#examples","text":"arduino-cli lib search audio","title":"Examples"},{"location":"commands/arduino-cli_lib_search/#options","text":"-h, --help help for search --names Show library names only.","title":"Options"},{"location":"commands/arduino-cli_lib_search/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_search/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_search/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_uninstall/","text":"arduino-cli lib uninstall \u00b6 Uninstalls one or more libraries. Synopsis \u00b6 Uninstalls one or more libraries. arduino-cli lib uninstall LIBRARY_NAME(S) [flags] Examples \u00b6 arduino-cli lib uninstall AudioZero Options \u00b6 -h, --help help for uninstall Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib uninstall"},{"location":"commands/arduino-cli_lib_uninstall/#arduino-cli-lib-uninstall","text":"Uninstalls one or more libraries.","title":"arduino-cli lib uninstall"},{"location":"commands/arduino-cli_lib_uninstall/#synopsis","text":"Uninstalls one or more libraries. arduino-cli lib uninstall LIBRARY_NAME(S) [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_uninstall/#examples","text":"arduino-cli lib uninstall AudioZero","title":"Examples"},{"location":"commands/arduino-cli_lib_uninstall/#options","text":"-h, --help help for uninstall","title":"Options"},{"location":"commands/arduino-cli_lib_uninstall/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_uninstall/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_uninstall/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_update-index/","text":"arduino-cli lib update-index \u00b6 Updates the libraries index. Synopsis \u00b6 Updates the libraries index to the latest version. arduino-cli lib update-index [flags] Examples \u00b6 arduino-cli lib update-index Options \u00b6 -h, --help help for update-index Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib update-index"},{"location":"commands/arduino-cli_lib_update-index/#arduino-cli-lib-update-index","text":"Updates the libraries index.","title":"arduino-cli lib update-index"},{"location":"commands/arduino-cli_lib_update-index/#synopsis","text":"Updates the libraries index to the latest version. arduino-cli lib update-index [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_update-index/#examples","text":"arduino-cli lib update-index","title":"Examples"},{"location":"commands/arduino-cli_lib_update-index/#options","text":"-h, --help help for update-index","title":"Options"},{"location":"commands/arduino-cli_lib_update-index/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_update-index/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_update-index/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_lib_upgrade/","text":"arduino-cli lib upgrade \u00b6 Upgrades installed libraries. Synopsis \u00b6 This command upgrades an installed library to the latest available version. Multiple libraries can be passed separated by a space. If no arguments are provided, the command will upgrade all the installed libraries where an update is available. arduino-cli lib upgrade [flags] Examples \u00b6 arduino-cli lib upgrade arduino-cli lib upgrade Audio arduino-cli lib upgrade Audio ArduinoJson Options \u00b6 -h, --help help for upgrade Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli lib - Arduino commands about libraries. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"lib upgrade"},{"location":"commands/arduino-cli_lib_upgrade/#arduino-cli-lib-upgrade","text":"Upgrades installed libraries.","title":"arduino-cli lib upgrade"},{"location":"commands/arduino-cli_lib_upgrade/#synopsis","text":"This command upgrades an installed library to the latest available version. Multiple libraries can be passed separated by a space. If no arguments are provided, the command will upgrade all the installed libraries where an update is available. arduino-cli lib upgrade [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_lib_upgrade/#examples","text":"arduino-cli lib upgrade arduino-cli lib upgrade Audio arduino-cli lib upgrade Audio ArduinoJson","title":"Examples"},{"location":"commands/arduino-cli_lib_upgrade/#options","text":"-h, --help help for upgrade","title":"Options"},{"location":"commands/arduino-cli_lib_upgrade/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_lib_upgrade/#see-also","text":"arduino-cli lib - Arduino commands about libraries.","title":"SEE ALSO"},{"location":"commands/arduino-cli_lib_upgrade/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_sketch/","text":"arduino-cli sketch \u00b6 Arduino CLI Sketch Commands. Synopsis \u00b6 Arduino CLI Sketch Commands. Examples \u00b6 arduino-cli sketch new MySketch Options \u00b6 -h, --help help for sketch Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. arduino-cli sketch new - Create a new Sketch Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"sketch"},{"location":"commands/arduino-cli_sketch/#arduino-cli-sketch","text":"Arduino CLI Sketch Commands.","title":"arduino-cli sketch"},{"location":"commands/arduino-cli_sketch/#synopsis","text":"Arduino CLI Sketch Commands.","title":"Synopsis"},{"location":"commands/arduino-cli_sketch/#examples","text":"arduino-cli sketch new MySketch","title":"Examples"},{"location":"commands/arduino-cli_sketch/#options","text":"-h, --help help for sketch","title":"Options"},{"location":"commands/arduino-cli_sketch/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_sketch/#see-also","text":"arduino-cli - Arduino CLI. arduino-cli sketch new - Create a new Sketch","title":"SEE ALSO"},{"location":"commands/arduino-cli_sketch/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_sketch_new/","text":"arduino-cli sketch new \u00b6 Create a new Sketch Synopsis \u00b6 Create a new Sketch arduino-cli sketch new [flags] Examples \u00b6 arduino-cli sketch new MultiBlinker Options \u00b6 -h, --help help for new Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli sketch - Arduino CLI Sketch Commands. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"sketch new"},{"location":"commands/arduino-cli_sketch_new/#arduino-cli-sketch-new","text":"Create a new Sketch","title":"arduino-cli sketch new"},{"location":"commands/arduino-cli_sketch_new/#synopsis","text":"Create a new Sketch arduino-cli sketch new [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_sketch_new/#examples","text":"arduino-cli sketch new MultiBlinker","title":"Examples"},{"location":"commands/arduino-cli_sketch_new/#options","text":"-h, --help help for new","title":"Options"},{"location":"commands/arduino-cli_sketch_new/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_sketch_new/#see-also","text":"arduino-cli sketch - Arduino CLI Sketch Commands.","title":"SEE ALSO"},{"location":"commands/arduino-cli_sketch_new/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_upload/","text":"arduino-cli upload \u00b6 Upload Arduino sketches. Synopsis \u00b6 Upload Arduino sketches. arduino-cli upload [flags] Examples \u00b6 arduino-cli upload /home/user/Arduino/MySketch Options \u00b6 -b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for upload -i, --input string Input file to be uploaded. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0 -t, --verify Verify uploaded binary after the upload. Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"upload"},{"location":"commands/arduino-cli_upload/#arduino-cli-upload","text":"Upload Arduino sketches.","title":"arduino-cli upload"},{"location":"commands/arduino-cli_upload/#synopsis","text":"Upload Arduino sketches. arduino-cli upload [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_upload/#examples","text":"arduino-cli upload /home/user/Arduino/MySketch","title":"Examples"},{"location":"commands/arduino-cli_upload/#options","text":"-b, --fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno -h, --help help for upload -i, --input string Input file to be uploaded. -p, --port string Upload port, e.g.: COM10 or /dev/ttyACM0 -t, --verify Verify uploaded binary after the upload.","title":"Options"},{"location":"commands/arduino-cli_upload/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_upload/#see-also","text":"arduino-cli - Arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli_upload/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"commands/arduino-cli_version/","text":"arduino-cli version \u00b6 Shows version number of arduino CLI. Synopsis \u00b6 Shows version number of arduino CLI which is installed on your system. arduino-cli version [flags] Examples \u00b6 arduino-cli version Options \u00b6 -h, --help help for version Options inherited from parent commands \u00b6 --additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output. SEE ALSO \u00b6 arduino-cli - Arduino CLI. Auto generated by spf13/cobra on 16-Mar-2020 \u00b6","title":"version"},{"location":"commands/arduino-cli_version/#arduino-cli-version","text":"Shows version number of arduino CLI.","title":"arduino-cli version"},{"location":"commands/arduino-cli_version/#synopsis","text":"Shows version number of arduino CLI which is installed on your system. arduino-cli version [flags]","title":"Synopsis"},{"location":"commands/arduino-cli_version/#examples","text":"arduino-cli version","title":"Examples"},{"location":"commands/arduino-cli_version/#options","text":"-h, --help help for version","title":"Options"},{"location":"commands/arduino-cli_version/#options-inherited-from-parent-commands","text":"--additional-urls strings Additional URLs for the board manager. --config-file string The custom config file (if not specified the default will be used). --format string The output format, can be [text|json]. (default \"text\") --log-file string Path to the file where logs will be written. --log-format string The output format for the logs, can be [text|json]. --log-level string Messages with this level and above will be logged. Valid levels are: Trace, Debug, Info, Warning, Error, Fatal, Panic -v, --verbose Print the logs on the standard output.","title":"Options inherited from parent commands"},{"location":"commands/arduino-cli_version/#see-also","text":"arduino-cli - Arduino CLI.","title":"SEE ALSO"},{"location":"commands/arduino-cli_version/#auto-generated-by-spf13cobra-on-16-mar-2020","text":"","title":"Auto generated by spf13/cobra on 16-Mar-2020"},{"location":"rpc/commands/","text":"Protocol Documentation \u00b6 Table of Contents \u00b6 commands/board.proto BoardAttachReq BoardAttachResp BoardDetailsReq BoardDetailsResp BoardListAllReq BoardListAllResp BoardListItem BoardListReq BoardListResp ConfigOption ConfigValue DetectedPort RequiredTool commands/commands.proto DestroyReq DestroyResp InitReq InitResp RescanReq RescanResp UpdateIndexReq UpdateIndexResp UpdateLibrariesIndexReq UpdateLibrariesIndexResp VersionReq VersionResp ArduinoCore commands/common.proto DownloadProgress Instance TaskProgress commands/compile.proto CompileReq CompileResp commands/core.proto Board Platform PlatformDownloadReq PlatformDownloadResp PlatformInstallReq PlatformInstallResp PlatformListReq PlatformListResp PlatformSearchReq PlatformSearchResp PlatformUninstallReq PlatformUninstallResp PlatformUpgradeReq PlatformUpgradeResp commands/lib.proto DownloadResource InstalledLibrary Library Library.PropertiesEntry LibraryDependency LibraryDependencyStatus LibraryDownloadReq LibraryDownloadResp LibraryInstallReq LibraryInstallResp LibraryListReq LibraryListResp LibraryRelease LibraryResolveDependenciesReq LibraryResolveDependenciesResp LibrarySearchReq LibrarySearchResp LibraryUninstallReq LibraryUninstallResp LibraryUpgradeAllReq LibraryUpgradeAllResp SearchedLibrary SearchedLibrary.ReleasesEntry LibraryLayout LibraryLocation commands/upload.proto UploadReq UploadResp Scalar Value Types Top commands/board.proto \u00b6 BoardAttachReq \u00b6 Field Type Label Description instance Instance board_uri string sketch_path string search_timeout string BoardAttachResp \u00b6 Field Type Label Description task_progress TaskProgress BoardDetailsReq \u00b6 Field Type Label Description instance Instance fqbn string BoardDetailsResp \u00b6 Field Type Label Description name string config_options ConfigOption repeated required_tools RequiredTool repeated BoardListAllReq \u00b6 Field Type Label Description instance Instance search_args string repeated BoardListAllResp \u00b6 Field Type Label Description boards BoardListItem repeated BoardListItem \u00b6 Field Type Label Description name string FQBN string BoardListReq \u00b6 Field Type Label Description instance Instance BoardListResp \u00b6 Field Type Label Description ports DetectedPort repeated ConfigOption \u00b6 Field Type Label Description option string option_label string values ConfigValue repeated ConfigValue \u00b6 Field Type Label Description value string value_label string selected bool DetectedPort \u00b6 Field Type Label Description address string protocol string protocol_label string boards BoardListItem repeated RequiredTool \u00b6 Field Type Label Description name string version string packager string Top commands/commands.proto \u00b6 DestroyReq \u00b6 Field Type Label Description instance Instance DestroyResp \u00b6 InitReq \u00b6 Field Type Label Description library_manager_only bool InitResp \u00b6 Field Type Label Description instance Instance platforms_index_errors string repeated libraries_index_error string download_progress DownloadProgress task_progress TaskProgress RescanReq \u00b6 Field Type Label Description instance Instance RescanResp \u00b6 Field Type Label Description platforms_index_errors string repeated libraries_index_error string UpdateIndexReq \u00b6 Field Type Label Description instance Instance UpdateIndexResp \u00b6 Field Type Label Description download_progress DownloadProgress UpdateLibrariesIndexReq \u00b6 Field Type Label Description instance Instance UpdateLibrariesIndexResp \u00b6 Field Type Label Description download_progress DownloadProgress VersionReq \u00b6 VersionResp \u00b6 Field Type Label Description version string ArduinoCore \u00b6 The main Arduino Platform Service BOOTSTRAP COMMANDS \u00b6 Method Name Request Type Response Type Description Init InitReq InitResp stream Start a new instance of the Arduino Core Service Destroy DestroyReq DestroyResp Destroy an instance of the Arduino Core Service Rescan RescanReq RescanResp Rescan instance of the Arduino Core Service UpdateIndex UpdateIndexReq UpdateIndexResp stream Update package index of the Arduino Core Service UpdateLibrariesIndex UpdateLibrariesIndexReq UpdateLibrariesIndexResp stream Update libraries index Version VersionReq VersionResp BoardDetails BoardDetailsReq BoardDetailsResp Requests details about a board BoardAttach BoardAttachReq BoardAttachResp stream BoardList BoardListReq BoardListResp BoardListAll BoardListAllReq BoardListAllResp Compile CompileReq CompileResp stream PlatformInstall PlatformInstallReq PlatformInstallResp stream PlatformDownload PlatformDownloadReq PlatformDownloadResp stream PlatformUninstall PlatformUninstallReq PlatformUninstallResp stream PlatformUpgrade PlatformUpgradeReq PlatformUpgradeResp stream Upload UploadReq UploadResp stream PlatformSearch PlatformSearchReq PlatformSearchResp PlatformList PlatformListReq PlatformListResp LibraryDownload LibraryDownloadReq LibraryDownloadResp stream LibraryInstall LibraryInstallReq LibraryInstallResp stream LibraryUninstall LibraryUninstallReq LibraryUninstallResp stream LibraryUpgradeAll LibraryUpgradeAllReq LibraryUpgradeAllResp stream LibraryResolveDependencies LibraryResolveDependenciesReq LibraryResolveDependenciesResp LibrarySearch LibrarySearchReq LibrarySearchResp LibraryList LibraryListReq LibraryListResp Top commands/common.proto \u00b6 DownloadProgress \u00b6 Field Type Label Description url string file string total_size int64 downloaded int64 completed bool Instance \u00b6 Field Type Label Description id int32 TaskProgress \u00b6 Field Type Label Description name string message string completed bool Top commands/compile.proto \u00b6 CompileReq \u00b6 Field Type Label Description instance Instance fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno. sketchPath string showProperties bool Show all build preferences used instead of compiling. preprocess bool Print preprocessed code to stdout. buildCachePath string Builds of 'core.a' are saved into this path to be cached and reused. buildPath string Path where to save compiled files. buildProperties string repeated List of custom build properties separated by commas. Or can be used multiple times for multiple properties. warnings string Used to tell gcc which warning level to use. verbose bool Turns on verbose mode. quiet bool Suppresses almost every output. vidPid string VID/PID specific build properties. exportFile string The compiled binary is written to this file jobs int32 The max number of concurrent compiler instances to run (as make -jx) libraries string repeated List of custom libraries paths separated by commas. Or can be used multiple times for multiple libraries paths. optimizeForDebug bool Optimize compile output for debug, not for release dryRun bool When set to true the compiled binary will not be copied to the export directory CompileResp \u00b6 Field Type Label Description out_stream bytes err_stream bytes Top commands/core.proto \u00b6 Board \u00b6 Field Type Label Description name string fqbn string Platform \u00b6 Field Type Label Description ID string Installed string Latest string Name string Maintainer string Website string Email string Boards Board repeated PlatformDownloadReq \u00b6 Field Type Label Description instance Instance platform_package string architecture string version string PlatformDownloadResp \u00b6 Field Type Label Description progress DownloadProgress PlatformInstallReq \u00b6 Field Type Label Description instance Instance platform_package string architecture string version string PlatformInstallResp \u00b6 Field Type Label Description progress DownloadProgress task_progress TaskProgress PlatformListReq \u00b6 Field Type Label Description instance Instance updatable_only bool PlatformListResp \u00b6 Field Type Label Description installed_platform Platform repeated PlatformSearchReq \u00b6 Field Type Label Description instance Instance search_args string all_versions bool PlatformSearchResp \u00b6 Field Type Label Description search_output Platform repeated PlatformUninstallReq \u00b6 Field Type Label Description instance Instance platform_package string architecture string PlatformUninstallResp \u00b6 Field Type Label Description task_progress TaskProgress PlatformUpgradeReq \u00b6 Field Type Label Description instance Instance platform_package string architecture string PlatformUpgradeResp \u00b6 Field Type Label Description progress DownloadProgress task_progress TaskProgress Top commands/lib.proto \u00b6 DownloadResource \u00b6 Field Type Label Description url string archivefilename string checksum string size int64 cachepath string InstalledLibrary \u00b6 Field Type Label Description library Library release LibraryRelease Library \u00b6 Field Type Label Description name string author string maintainer string sentence string paragraph string website string category string architectures string repeated types string repeated install_dir string source_dir string utility_dir string container_platform string real_name string dot_a_linkage bool precompiled bool ld_flags string is_legacy bool version string license string properties Library.PropertiesEntry repeated location LibraryLocation layout LibraryLayout Library.PropertiesEntry \u00b6 Field Type Label Description key string value string LibraryDependency \u00b6 Field Type Label Description name string version_constraint string LibraryDependencyStatus \u00b6 Field Type Label Description name string versionRequired string versionInstalled string LibraryDownloadReq \u00b6 Field Type Label Description instance Instance name string version string LibraryDownloadResp \u00b6 Field Type Label Description progress DownloadProgress LibraryInstallReq \u00b6 Field Type Label Description instance Instance name string version string LibraryInstallResp \u00b6 Field Type Label Description progress DownloadProgress task_progress TaskProgress LibraryListReq \u00b6 Field Type Label Description instance Instance all bool updatable bool LibraryListResp \u00b6 Field Type Label Description installed_library InstalledLibrary repeated LibraryRelease \u00b6 Field Type Label Description author string version string maintainer string sentence string paragraph string website string category string architectures string repeated types string repeated resources DownloadResource license string provides_includes string repeated dependencies LibraryDependency repeated LibraryResolveDependenciesReq \u00b6 Field Type Label Description instance Instance name string version string LibraryResolveDependenciesResp \u00b6 Field Type Label Description dependencies LibraryDependencyStatus repeated LibrarySearchReq \u00b6 Field Type Label Description instance Instance query string LibrarySearchResp \u00b6 Field Type Label Description libraries SearchedLibrary repeated LibraryUninstallReq \u00b6 Field Type Label Description instance Instance name string version string LibraryUninstallResp \u00b6 Field Type Label Description task_progress TaskProgress LibraryUpgradeAllReq \u00b6 Field Type Label Description instance Instance LibraryUpgradeAllResp \u00b6 Field Type Label Description progress DownloadProgress task_progress TaskProgress SearchedLibrary \u00b6 Field Type Label Description name string releases SearchedLibrary.ReleasesEntry repeated latest LibraryRelease SearchedLibrary.ReleasesEntry \u00b6 Field Type Label Description key string value LibraryRelease LibraryLayout \u00b6 Name Number Description flat_layout 0 recursive_layout 1 LibraryLocation \u00b6 Name Number Description ide_builtin 0 user 1 (sketchbook) platform_builtin 2 referenced_platform_builtin 3 Top commands/upload.proto \u00b6 UploadReq \u00b6 Field Type Label Description instance Instance fqbn string sketch_path string port string verbose bool verify bool import_file string UploadResp \u00b6 Field Type Label Description out_stream bytes err_stream bytes Scalar Value Types \u00b6 .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"commands"},{"location":"rpc/commands/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"rpc/commands/#table-of-contents","text":"commands/board.proto BoardAttachReq BoardAttachResp BoardDetailsReq BoardDetailsResp BoardListAllReq BoardListAllResp BoardListItem BoardListReq BoardListResp ConfigOption ConfigValue DetectedPort RequiredTool commands/commands.proto DestroyReq DestroyResp InitReq InitResp RescanReq RescanResp UpdateIndexReq UpdateIndexResp UpdateLibrariesIndexReq UpdateLibrariesIndexResp VersionReq VersionResp ArduinoCore commands/common.proto DownloadProgress Instance TaskProgress commands/compile.proto CompileReq CompileResp commands/core.proto Board Platform PlatformDownloadReq PlatformDownloadResp PlatformInstallReq PlatformInstallResp PlatformListReq PlatformListResp PlatformSearchReq PlatformSearchResp PlatformUninstallReq PlatformUninstallResp PlatformUpgradeReq PlatformUpgradeResp commands/lib.proto DownloadResource InstalledLibrary Library Library.PropertiesEntry LibraryDependency LibraryDependencyStatus LibraryDownloadReq LibraryDownloadResp LibraryInstallReq LibraryInstallResp LibraryListReq LibraryListResp LibraryRelease LibraryResolveDependenciesReq LibraryResolveDependenciesResp LibrarySearchReq LibrarySearchResp LibraryUninstallReq LibraryUninstallResp LibraryUpgradeAllReq LibraryUpgradeAllResp SearchedLibrary SearchedLibrary.ReleasesEntry LibraryLayout LibraryLocation commands/upload.proto UploadReq UploadResp Scalar Value Types Top","title":"Table of Contents"},{"location":"rpc/commands/#commandsboardproto","text":"","title":"commands/board.proto"},{"location":"rpc/commands/#boardattachreq","text":"Field Type Label Description instance Instance board_uri string sketch_path string search_timeout string","title":"BoardAttachReq"},{"location":"rpc/commands/#boardattachresp","text":"Field Type Label Description task_progress TaskProgress","title":"BoardAttachResp"},{"location":"rpc/commands/#boarddetailsreq","text":"Field Type Label Description instance Instance fqbn string","title":"BoardDetailsReq"},{"location":"rpc/commands/#boarddetailsresp","text":"Field Type Label Description name string config_options ConfigOption repeated required_tools RequiredTool repeated","title":"BoardDetailsResp"},{"location":"rpc/commands/#boardlistallreq","text":"Field Type Label Description instance Instance search_args string repeated","title":"BoardListAllReq"},{"location":"rpc/commands/#boardlistallresp","text":"Field Type Label Description boards BoardListItem repeated","title":"BoardListAllResp"},{"location":"rpc/commands/#boardlistitem","text":"Field Type Label Description name string FQBN string","title":"BoardListItem"},{"location":"rpc/commands/#boardlistreq","text":"Field Type Label Description instance Instance","title":"BoardListReq"},{"location":"rpc/commands/#boardlistresp","text":"Field Type Label Description ports DetectedPort repeated","title":"BoardListResp"},{"location":"rpc/commands/#configoption","text":"Field Type Label Description option string option_label string values ConfigValue repeated","title":"ConfigOption"},{"location":"rpc/commands/#configvalue","text":"Field Type Label Description value string value_label string selected bool","title":"ConfigValue"},{"location":"rpc/commands/#detectedport","text":"Field Type Label Description address string protocol string protocol_label string boards BoardListItem repeated","title":"DetectedPort"},{"location":"rpc/commands/#requiredtool","text":"Field Type Label Description name string version string packager string Top","title":"RequiredTool"},{"location":"rpc/commands/#commandscommandsproto","text":"","title":"commands/commands.proto"},{"location":"rpc/commands/#destroyreq","text":"Field Type Label Description instance Instance","title":"DestroyReq"},{"location":"rpc/commands/#destroyresp","text":"","title":"DestroyResp"},{"location":"rpc/commands/#initreq","text":"Field Type Label Description library_manager_only bool","title":"InitReq"},{"location":"rpc/commands/#initresp","text":"Field Type Label Description instance Instance platforms_index_errors string repeated libraries_index_error string download_progress DownloadProgress task_progress TaskProgress","title":"InitResp"},{"location":"rpc/commands/#rescanreq","text":"Field Type Label Description instance Instance","title":"RescanReq"},{"location":"rpc/commands/#rescanresp","text":"Field Type Label Description platforms_index_errors string repeated libraries_index_error string","title":"RescanResp"},{"location":"rpc/commands/#updateindexreq","text":"Field Type Label Description instance Instance","title":"UpdateIndexReq"},{"location":"rpc/commands/#updateindexresp","text":"Field Type Label Description download_progress DownloadProgress","title":"UpdateIndexResp"},{"location":"rpc/commands/#updatelibrariesindexreq","text":"Field Type Label Description instance Instance","title":"UpdateLibrariesIndexReq"},{"location":"rpc/commands/#updatelibrariesindexresp","text":"Field Type Label Description download_progress DownloadProgress","title":"UpdateLibrariesIndexResp"},{"location":"rpc/commands/#versionreq","text":"","title":"VersionReq"},{"location":"rpc/commands/#versionresp","text":"Field Type Label Description version string","title":"VersionResp"},{"location":"rpc/commands/#arduinocore","text":"The main Arduino Platform Service","title":"ArduinoCore"},{"location":"rpc/commands/#bootstrap-commands","text":"Method Name Request Type Response Type Description Init InitReq InitResp stream Start a new instance of the Arduino Core Service Destroy DestroyReq DestroyResp Destroy an instance of the Arduino Core Service Rescan RescanReq RescanResp Rescan instance of the Arduino Core Service UpdateIndex UpdateIndexReq UpdateIndexResp stream Update package index of the Arduino Core Service UpdateLibrariesIndex UpdateLibrariesIndexReq UpdateLibrariesIndexResp stream Update libraries index Version VersionReq VersionResp BoardDetails BoardDetailsReq BoardDetailsResp Requests details about a board BoardAttach BoardAttachReq BoardAttachResp stream BoardList BoardListReq BoardListResp BoardListAll BoardListAllReq BoardListAllResp Compile CompileReq CompileResp stream PlatformInstall PlatformInstallReq PlatformInstallResp stream PlatformDownload PlatformDownloadReq PlatformDownloadResp stream PlatformUninstall PlatformUninstallReq PlatformUninstallResp stream PlatformUpgrade PlatformUpgradeReq PlatformUpgradeResp stream Upload UploadReq UploadResp stream PlatformSearch PlatformSearchReq PlatformSearchResp PlatformList PlatformListReq PlatformListResp LibraryDownload LibraryDownloadReq LibraryDownloadResp stream LibraryInstall LibraryInstallReq LibraryInstallResp stream LibraryUninstall LibraryUninstallReq LibraryUninstallResp stream LibraryUpgradeAll LibraryUpgradeAllReq LibraryUpgradeAllResp stream LibraryResolveDependencies LibraryResolveDependenciesReq LibraryResolveDependenciesResp LibrarySearch LibrarySearchReq LibrarySearchResp LibraryList LibraryListReq LibraryListResp Top","title":"BOOTSTRAP COMMANDS"},{"location":"rpc/commands/#commandscommonproto","text":"","title":"commands/common.proto"},{"location":"rpc/commands/#downloadprogress","text":"Field Type Label Description url string file string total_size int64 downloaded int64 completed bool","title":"DownloadProgress"},{"location":"rpc/commands/#instance","text":"Field Type Label Description id int32","title":"Instance"},{"location":"rpc/commands/#taskprogress","text":"Field Type Label Description name string message string completed bool Top","title":"TaskProgress"},{"location":"rpc/commands/#commandscompileproto","text":"","title":"commands/compile.proto"},{"location":"rpc/commands/#compilereq","text":"Field Type Label Description instance Instance fqbn string Fully Qualified Board Name, e.g.: arduino:avr:uno. sketchPath string showProperties bool Show all build preferences used instead of compiling. preprocess bool Print preprocessed code to stdout. buildCachePath string Builds of 'core.a' are saved into this path to be cached and reused. buildPath string Path where to save compiled files. buildProperties string repeated List of custom build properties separated by commas. Or can be used multiple times for multiple properties. warnings string Used to tell gcc which warning level to use. verbose bool Turns on verbose mode. quiet bool Suppresses almost every output. vidPid string VID/PID specific build properties. exportFile string The compiled binary is written to this file jobs int32 The max number of concurrent compiler instances to run (as make -jx) libraries string repeated List of custom libraries paths separated by commas. Or can be used multiple times for multiple libraries paths. optimizeForDebug bool Optimize compile output for debug, not for release dryRun bool When set to true the compiled binary will not be copied to the export directory","title":"CompileReq"},{"location":"rpc/commands/#compileresp","text":"Field Type Label Description out_stream bytes err_stream bytes Top","title":"CompileResp"},{"location":"rpc/commands/#commandscoreproto","text":"","title":"commands/core.proto"},{"location":"rpc/commands/#board","text":"Field Type Label Description name string fqbn string","title":"Board"},{"location":"rpc/commands/#platform","text":"Field Type Label Description ID string Installed string Latest string Name string Maintainer string Website string Email string Boards Board repeated","title":"Platform"},{"location":"rpc/commands/#platformdownloadreq","text":"Field Type Label Description instance Instance platform_package string architecture string version string","title":"PlatformDownloadReq"},{"location":"rpc/commands/#platformdownloadresp","text":"Field Type Label Description progress DownloadProgress","title":"PlatformDownloadResp"},{"location":"rpc/commands/#platforminstallreq","text":"Field Type Label Description instance Instance platform_package string architecture string version string","title":"PlatformInstallReq"},{"location":"rpc/commands/#platforminstallresp","text":"Field Type Label Description progress DownloadProgress task_progress TaskProgress","title":"PlatformInstallResp"},{"location":"rpc/commands/#platformlistreq","text":"Field Type Label Description instance Instance updatable_only bool","title":"PlatformListReq"},{"location":"rpc/commands/#platformlistresp","text":"Field Type Label Description installed_platform Platform repeated","title":"PlatformListResp"},{"location":"rpc/commands/#platformsearchreq","text":"Field Type Label Description instance Instance search_args string all_versions bool","title":"PlatformSearchReq"},{"location":"rpc/commands/#platformsearchresp","text":"Field Type Label Description search_output Platform repeated","title":"PlatformSearchResp"},{"location":"rpc/commands/#platformuninstallreq","text":"Field Type Label Description instance Instance platform_package string architecture string","title":"PlatformUninstallReq"},{"location":"rpc/commands/#platformuninstallresp","text":"Field Type Label Description task_progress TaskProgress","title":"PlatformUninstallResp"},{"location":"rpc/commands/#platformupgradereq","text":"Field Type Label Description instance Instance platform_package string architecture string","title":"PlatformUpgradeReq"},{"location":"rpc/commands/#platformupgraderesp","text":"Field Type Label Description progress DownloadProgress task_progress TaskProgress Top","title":"PlatformUpgradeResp"},{"location":"rpc/commands/#commandslibproto","text":"","title":"commands/lib.proto"},{"location":"rpc/commands/#downloadresource","text":"Field Type Label Description url string archivefilename string checksum string size int64 cachepath string","title":"DownloadResource"},{"location":"rpc/commands/#installedlibrary","text":"Field Type Label Description library Library release LibraryRelease","title":"InstalledLibrary"},{"location":"rpc/commands/#library","text":"Field Type Label Description name string author string maintainer string sentence string paragraph string website string category string architectures string repeated types string repeated install_dir string source_dir string utility_dir string container_platform string real_name string dot_a_linkage bool precompiled bool ld_flags string is_legacy bool version string license string properties Library.PropertiesEntry repeated location LibraryLocation layout LibraryLayout","title":"Library"},{"location":"rpc/commands/#librarypropertiesentry","text":"Field Type Label Description key string value string","title":"Library.PropertiesEntry"},{"location":"rpc/commands/#librarydependency","text":"Field Type Label Description name string version_constraint string","title":"LibraryDependency"},{"location":"rpc/commands/#librarydependencystatus","text":"Field Type Label Description name string versionRequired string versionInstalled string","title":"LibraryDependencyStatus"},{"location":"rpc/commands/#librarydownloadreq","text":"Field Type Label Description instance Instance name string version string","title":"LibraryDownloadReq"},{"location":"rpc/commands/#librarydownloadresp","text":"Field Type Label Description progress DownloadProgress","title":"LibraryDownloadResp"},{"location":"rpc/commands/#libraryinstallreq","text":"Field Type Label Description instance Instance name string version string","title":"LibraryInstallReq"},{"location":"rpc/commands/#libraryinstallresp","text":"Field Type Label Description progress DownloadProgress task_progress TaskProgress","title":"LibraryInstallResp"},{"location":"rpc/commands/#librarylistreq","text":"Field Type Label Description instance Instance all bool updatable bool","title":"LibraryListReq"},{"location":"rpc/commands/#librarylistresp","text":"Field Type Label Description installed_library InstalledLibrary repeated","title":"LibraryListResp"},{"location":"rpc/commands/#libraryrelease","text":"Field Type Label Description author string version string maintainer string sentence string paragraph string website string category string architectures string repeated types string repeated resources DownloadResource license string provides_includes string repeated dependencies LibraryDependency repeated","title":"LibraryRelease"},{"location":"rpc/commands/#libraryresolvedependenciesreq","text":"Field Type Label Description instance Instance name string version string","title":"LibraryResolveDependenciesReq"},{"location":"rpc/commands/#libraryresolvedependenciesresp","text":"Field Type Label Description dependencies LibraryDependencyStatus repeated","title":"LibraryResolveDependenciesResp"},{"location":"rpc/commands/#librarysearchreq","text":"Field Type Label Description instance Instance query string","title":"LibrarySearchReq"},{"location":"rpc/commands/#librarysearchresp","text":"Field Type Label Description libraries SearchedLibrary repeated","title":"LibrarySearchResp"},{"location":"rpc/commands/#libraryuninstallreq","text":"Field Type Label Description instance Instance name string version string","title":"LibraryUninstallReq"},{"location":"rpc/commands/#libraryuninstallresp","text":"Field Type Label Description task_progress TaskProgress","title":"LibraryUninstallResp"},{"location":"rpc/commands/#libraryupgradeallreq","text":"Field Type Label Description instance Instance","title":"LibraryUpgradeAllReq"},{"location":"rpc/commands/#libraryupgradeallresp","text":"Field Type Label Description progress DownloadProgress task_progress TaskProgress","title":"LibraryUpgradeAllResp"},{"location":"rpc/commands/#searchedlibrary","text":"Field Type Label Description name string releases SearchedLibrary.ReleasesEntry repeated latest LibraryRelease","title":"SearchedLibrary"},{"location":"rpc/commands/#searchedlibraryreleasesentry","text":"Field Type Label Description key string value LibraryRelease","title":"SearchedLibrary.ReleasesEntry"},{"location":"rpc/commands/#librarylayout","text":"Name Number Description flat_layout 0 recursive_layout 1","title":"LibraryLayout"},{"location":"rpc/commands/#librarylocation","text":"Name Number Description ide_builtin 0 user 1 (sketchbook) platform_builtin 2 referenced_platform_builtin 3 Top","title":"LibraryLocation"},{"location":"rpc/commands/#commandsuploadproto","text":"","title":"commands/upload.proto"},{"location":"rpc/commands/#uploadreq","text":"Field Type Label Description instance Instance fqbn string sketch_path string port string verbose bool verify bool import_file string","title":"UploadReq"},{"location":"rpc/commands/#uploadresp","text":"Field Type Label Description out_stream bytes err_stream bytes","title":"UploadResp"},{"location":"rpc/commands/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"rpc/debug/","text":"Protocol Documentation \u00b6 Table of Contents \u00b6 debug/debug.proto DebugConfigReq DebugReq DebugResp Instance Debug Scalar Value Types Top debug/debug.proto \u00b6 DebugConfigReq \u00b6 Field Type Label Description instance Instance fqbn string sketch_path string port string verbose bool import_file string DebugReq \u00b6 The top-level message sent by the client for the Debug method. Multiple DebugReq messages can be sent but the first message must contain a DebugReq message to initialize the debug session. All subsequent messages must contain bytes to be sent to the debug session and must not contain a DebugReq message. Content must be either a debug session config or data to be sent. Field Type Label Description debugReq DebugConfigReq Provides information to the debug that specifies which is the target. The first StreamingOpenReq message must contain a DebugReq message. data bytes The data to be sent to the target being monitored. send_interrupt bool Set this to true to send and Interrupt signal to the debugger process DebugResp \u00b6 Field Type Label Description data bytes error string Instance \u00b6 TODO remove this in next proto refactoring because is a duplicate from commands/common.proto Field Type Label Description id int32 Debug \u00b6 Service that abstract a debug Session usage Method Name Request Type Response Type Description Debug DebugReq stream DebugResp stream Scalar Value Types \u00b6 .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"debug"},{"location":"rpc/debug/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"rpc/debug/#table-of-contents","text":"debug/debug.proto DebugConfigReq DebugReq DebugResp Instance Debug Scalar Value Types Top","title":"Table of Contents"},{"location":"rpc/debug/#debugdebugproto","text":"","title":"debug/debug.proto"},{"location":"rpc/debug/#debugconfigreq","text":"Field Type Label Description instance Instance fqbn string sketch_path string port string verbose bool import_file string","title":"DebugConfigReq"},{"location":"rpc/debug/#debugreq","text":"The top-level message sent by the client for the Debug method. Multiple DebugReq messages can be sent but the first message must contain a DebugReq message to initialize the debug session. All subsequent messages must contain bytes to be sent to the debug session and must not contain a DebugReq message. Content must be either a debug session config or data to be sent. Field Type Label Description debugReq DebugConfigReq Provides information to the debug that specifies which is the target. The first StreamingOpenReq message must contain a DebugReq message. data bytes The data to be sent to the target being monitored. send_interrupt bool Set this to true to send and Interrupt signal to the debugger process","title":"DebugReq"},{"location":"rpc/debug/#debugresp","text":"Field Type Label Description data bytes error string","title":"DebugResp"},{"location":"rpc/debug/#instance","text":"TODO remove this in next proto refactoring because is a duplicate from commands/common.proto Field Type Label Description id int32","title":"Instance"},{"location":"rpc/debug/#debug","text":"Service that abstract a debug Session usage Method Name Request Type Response Type Description Debug DebugReq stream DebugResp stream","title":"Debug"},{"location":"rpc/debug/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"rpc/monitor/","text":"Protocol Documentation \u00b6 Table of Contents \u00b6 monitor/monitor.proto MonitorConfig StreamingOpenReq StreamingOpenResp MonitorConfig.TargetType Monitor Scalar Value Types Top monitor/monitor.proto \u00b6 MonitorConfig \u00b6 Tells the monitor which target to open and provides additional parameters that might be needed to configure the target or the monitor itself. Field Type Label Description target string type MonitorConfig.TargetType additionalConfig google.protobuf.Struct StreamingOpenReq \u00b6 The top-level message sent by the client for the StreamingOpen method. Multiple StreamingOpenReq messages can be sent but the first message must contain a monitor_config message to initialize the monitor target. All subsequent messages must contain bytes to be sent to the target and must not contain a monitor_config message. Field Type Label Description monitorConfig MonitorConfig Provides information to the monitor that specifies which is the target. The first StreamingOpenReq message must contain a monitor_config message. data bytes The data to be sent to the target being monitored. StreamingOpenResp \u00b6 Field Type Label Description data bytes MonitorConfig.TargetType \u00b6 Name Number Description SERIAL 0 Monitor \u00b6 Service that abstract a Monitor usage Method Name Request Type Response Type Description StreamingOpen StreamingOpenReq stream StreamingOpenResp stream Scalar Value Types \u00b6 .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"monitor"},{"location":"rpc/monitor/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"rpc/monitor/#table-of-contents","text":"monitor/monitor.proto MonitorConfig StreamingOpenReq StreamingOpenResp MonitorConfig.TargetType Monitor Scalar Value Types Top","title":"Table of Contents"},{"location":"rpc/monitor/#monitormonitorproto","text":"","title":"monitor/monitor.proto"},{"location":"rpc/monitor/#monitorconfig","text":"Tells the monitor which target to open and provides additional parameters that might be needed to configure the target or the monitor itself. Field Type Label Description target string type MonitorConfig.TargetType additionalConfig google.protobuf.Struct","title":"MonitorConfig"},{"location":"rpc/monitor/#streamingopenreq","text":"The top-level message sent by the client for the StreamingOpen method. Multiple StreamingOpenReq messages can be sent but the first message must contain a monitor_config message to initialize the monitor target. All subsequent messages must contain bytes to be sent to the target and must not contain a monitor_config message. Field Type Label Description monitorConfig MonitorConfig Provides information to the monitor that specifies which is the target. The first StreamingOpenReq message must contain a monitor_config message. data bytes The data to be sent to the target being monitored.","title":"StreamingOpenReq"},{"location":"rpc/monitor/#streamingopenresp","text":"Field Type Label Description data bytes","title":"StreamingOpenResp"},{"location":"rpc/monitor/#monitorconfigtargettype","text":"Name Number Description SERIAL 0","title":"MonitorConfig.TargetType"},{"location":"rpc/monitor/#monitor","text":"Service that abstract a Monitor usage Method Name Request Type Response Type Description StreamingOpen StreamingOpenReq stream StreamingOpenResp stream","title":"Monitor"},{"location":"rpc/monitor/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"},{"location":"rpc/settings/","text":"Protocol Documentation \u00b6 Table of Contents \u00b6 settings/settings.proto GetAllRequest GetValueRequest MergeResponse RawData SetValueResponse Value Settings Scalar Value Types Top settings/settings.proto \u00b6 GetAllRequest \u00b6 GetValueRequest \u00b6 Field Type Label Description key string MergeResponse \u00b6 RawData \u00b6 Field Type Label Description jsonData string SetValueResponse \u00b6 Value \u00b6 Field Type Label Description key string jsonData string Settings \u00b6 Method Name Request Type Response Type Description GetAll GetAllRequest RawData Merge RawData MergeResponse GetValue GetValueRequest Value SetValue Value SetValueResponse Scalar Value Types \u00b6 .proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"settings"},{"location":"rpc/settings/#protocol-documentation","text":"","title":"Protocol Documentation"},{"location":"rpc/settings/#table-of-contents","text":"settings/settings.proto GetAllRequest GetValueRequest MergeResponse RawData SetValueResponse Value Settings Scalar Value Types Top","title":"Table of Contents"},{"location":"rpc/settings/#settingssettingsproto","text":"","title":"settings/settings.proto"},{"location":"rpc/settings/#getallrequest","text":"","title":"GetAllRequest"},{"location":"rpc/settings/#getvaluerequest","text":"Field Type Label Description key string","title":"GetValueRequest"},{"location":"rpc/settings/#mergeresponse","text":"","title":"MergeResponse"},{"location":"rpc/settings/#rawdata","text":"Field Type Label Description jsonData string","title":"RawData"},{"location":"rpc/settings/#setvalueresponse","text":"","title":"SetValueResponse"},{"location":"rpc/settings/#value","text":"Field Type Label Description key string jsonData string","title":"Value"},{"location":"rpc/settings/#settings","text":"Method Name Request Type Response Type Description GetAll GetAllRequest RawData Merge RawData MergeResponse GetValue GetValueRequest Value SetValue Value SetValueResponse","title":"Settings"},{"location":"rpc/settings/#scalar-value-types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby double double double float float64 double float Float float float float float float32 float float Float int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required) int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required) uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required) sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required) sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required) fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required) sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum bool bool boolean boolean bool bool boolean TrueClass/FalseClass string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8) bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)","title":"Scalar Value Types"}]}